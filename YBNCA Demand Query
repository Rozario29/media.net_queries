For 2022 File

SUMMARY

1.Getting Data from Vogon for YBNCA
2.Getting Data From MAX
3.Cleaning domains in python 
4.Distributing Inter BT external advertiser cost for BT 3
5. Joining MAX and YBNCA vogon data
6. Distributing TAC from HB reports




PROCESS WITH QUERIES AND TABLES STORED

1.Getting Data from Vogon for YBNCA

Query:

This is because some customers were in Arbitrage rather than YBNCA demand
select 
customer_id,
domain_name,
creative_id,
provider_group_id,
max_mkt,
max_partner_type, 
count(*) as adclicks,
sum(net_total_revenue) as net_total_revenue
from adclick
where ts between '2022040100' and '2022043023'
and customer_id IN ('8CU5RJ1PV',	'8CUN7S2PC',	'8CUWMI118',	'8CUU6IP82',	'8CU4O361K',	'8CUBQ50QO',	'8CU2F14C6',	'8CUM2PI55',	'8CU1WQ55F',	'8CUXP6AUQ',	'8CUG72UHU',	'8CU94FM32',	'8CUDF41E5',	'8CUCBP028',	'8CU65T3AT',	'8CU53284Y',	'8CU4171JQ',	'8CUIX8716',	'8CU3RXUW0',	'8CU81P3R7',	'8CUWMQE3H',	'8CUG548WD',	'8CU178IJL',	'8CU3HEJ2K',	'8CUQ5LJ63',	'8CU9Q74M4',	'8CUV8ML3S',	'8CU7O5VP2',	'8CUP4H3W6',	'8CULP3YQN',	'8CU93847Q',	'8CU64DMGW',	'8CUR746W0',	'8CUX1CQBH',	'8CUB4T860',	'8CUU26Z2M',	'8CUS7UNY8',	'8CUQT8U6U',	'8CUS47X5W',	'8CUZQP7LM',	'8CUAP6EAV',	'8CUSE9YI3',	'8CUJKX6Y3',	'8CUK2GD21',	'8CU1PLF6H',	'8CUQJV5RI',	'8CUM8Z8K6',	'8CUP6S26L',	'8CUT4OKFR',	'8CUI6FILU',	'8CU3VL6IT',	'8CU1VHFY1',	'8CU4P2DVS',	'8CU5H8BN8',	'8CUFH82F2',	'8CUEXS78H',	'8CU8ND892',	'8CU1AQFSQ',	'8CU3PXTSM',	'8CU62P57L',	'8CUODT3X1',	'8CU5BPU1N',	'8CUM9B2T4',	'8CUJ88Y7T',	'8CUV96EZ9',	'8CU6S1P10',	'8CU8M1K5Q',	'8CU5HO4YS',	'8CUMYV8E5',	'8CU10BY71',	'8CUT45X93',	'8CUOP71C6',	'8CUWFZQIA',	'8CU4JWBS7',	'8CUC52W5Z',	'8CU537PR5',	'8CUEFBGXD',	'8CU7HWCU5',	'8CU6O8H2I',	'8CU11Q2YE',	'8CUG2YC13',	'8CUVZNNSQ',	'8CUY8A14G',	'8CUNH9931',	'8CU4228XV',	'8CUZ97FOK',	'8CU5RIR4N',	'8CUQ5LDMC',	'8CUL7D4IC',	'8CU8V7RR1',	'8CU8E891J',	'8CUM9UIVO',	'8CUIPKDK2',	'8CU71351O',	'8CU2D7508',	'8CU4FCKBR',	'8CUP967L3',	'8CUMTQJ9K',	'8CUQU4XDV',	'8CUD83XHH',	'8CUW7O461',	'8CU1WP1QE',	'8CU524879',	'8CU6I65Y2',	'8CU4F53AF',	'8CUX8326C',	'8CU6F42V0',	'8CU3J73MR',	'8CUZ1IXN7',	'8CUW7N439',	'8CUY6F836',	'8CU6IH05N',	'8CU77E3RQ',	'8CUJ077YA',	'8CUP4292R',	'8CUXI53R1',	'8CUW7ANYT',	'8CU2DL1ZU',	'8CUEB4X2O',	'8CUPYY4YB',	'8CU16EX14',	'8CU7842Y4',	'8CUEA27X1',	'8CU54RJWV',	'8CU6R332J',	'8CUP2SL66',	'8CU2TVT31',	'8CURPH5LQ',	'8CU119M0Y',	'8CUNOYEI7',	'8CU5NI43I',	'8CUS86LIM',	'8CU3B0G4Y',	'8CUHC4XG3',	'8CU4XZW61',	'8CUGI2WH2',	'8CU148N1C',	'8CUPQV76X',	'8CU7FAK9R',	'8CUKLC2YL',	'8CU88W387',	'8CU2802E4',	'8CU81GHOQ',	'8CU9ETYEO',	'8CUVSM0M2',	'8CUTB109P',	'8CU6T5TK1',	'8CU17O663',	'8CURQY7JB',	'8CU42L9NI',	'8CU6N406F',	'8CUE0COQ1',	'8CUO93VI3',	'8CUQCBD94',	'8CUJ0P2FK',	'8CU231286',	'8CU75Q6EF',	'8CU2D0SFH',	'8CU2S1OVF',	'8CU8C99TC',	'8CUF2VP4M',	'8CU4NWR66',	'8CUX8PTS6',	'8CUNK6F3W',	'8CUVQ485G',	'8CUYT9A1U',	'8CU9YDG51',	'8CU5NHX53',	'8CUV8TI79',	'8CUYPJ17J',	'8CU3W6U34',	'8CU4C7W77',	'8CUZRQYX2',	'8CU3HLQQ8',	'8CULK68E5',	'8CU9T6PJ1',	'8CUBO6623',	'8CU166J74',	'8CUTHHI02',	'8CU35S6S8',	'8CU8D7LXY',	'8CU227GK5',	'8CUYW6X6S',	'8CUK96PL1',	'8CUP765MF',	'8CU1NA8RS',	'8CU42D0G6',	'8CU54EZ26',	'8CUAYJBD1',	'8CU7YXSCX',	'8CUM98PII',	'8CUQNE7C9',	'8CU445BSQ',	'8CU30419G',	'8CU57MZL9',	'8CUB2QZPF',	'8CUL25Q96',	'8CU5OA9BB',	'8CUBM7PS9',	'8CUWRWLVN',	'8CUB6BM1C',	'8CUS23II8',	'8CUQ33R4V',	'8CU2423U8',	'8CUVZN186',	'8CU50763W',	'8CUKNPB32',	'8CU182IQW',	'8CUSH2X3D',	'8CU2WOY7T',	'8CUS6UXIS',	'8CUG305TG',	'8CUD44L7E',	'8CU57255Z',	'8CUCF0I41',	'8CUD7XE27',	'8CU9SYDPW',	'8CUO0G425',	'8CU7FKFJ5',	'8CU3QVIY3',	'8CU243NR0',	'8CUT12E58',	'8CUP8MCN2',	'8CUPZRNGC',	'8CUKJ2T53',	'8CU31Q9C3',	'8CUIHXRCB',	'8CU84XVQ8',	'8CU51JJ6H',	'8CU7VGBS3',	'8CUP23WR7',	'8CUMPWGC4',	'8CUA9PA32',	'8CU77WCFU',	'8CU18B4NQ',	'8CUHP6A7G',	'8CU3FIF3U',	'8CU6EYVG2',	'8CU24OHNI',	'8CU2820C3',	'8CUF1OPX6',	'8CU91FWT4',	'8CUR6485G',	'8CUL75VT5',	'8CU4863Y1',	'8CUMGKIH7',	'8CU48256H',	'8CU89P1B2',	'8CUT17N89',	'8CU1505N7',	'8CUSL6ZG8',	'8CURVUW85',	'8CULO0ZW6',	'8CUV4EW5L',	'8CU3LF0L6',	'8CUR44F8I',	'8CU88PL31',	'8CU7IQYDP',	'8CU34GM3B',	'8CUM91JKH',	'8CUK6W0TJ',	'8CUXO07WH',	'8CU93S536',	'8CUT3KG4Y',	'8CU697NX8',	'8CUH2N5CE',	'8CU7Q2YSD',	'8CUPDVF0I',	'8CUUC7H2O',	'8CUUQ2YQI',	'8CU7U336X',	'8CUG37H35',	'8CUT0808N',	'8CU1H9730',	'8CUU550B8',	'8CULXDJ5I',	'8CU3XC7U4',	'8CUNXD177',	'8CUB6E4M5',	'8CU450BVR',	'8CU386Y6Y',	'8CU1H672G',	'8CU4B1S35',	'8CU4A6MMD',	'8CUD844J5',	'8CUOLF18F',	'8CU8WM007',	'8CU5IA67J',	'8CUM3O80K',	'8CU27488H',	'8CU40411F',	'8CU2SI52O',	'8CU28LO69',	'8CU1Z7OH0',	'8CU8K2P54',	'8CUG95H5Y',	'8CUH810F8',	'8CU2M20VF',	'8CUB9E4X4',	'8CU527E74',	'8CUHHG235',	'8CU2RRS6C',	'8CUPBNRC8',	'8CU7DV2WK',	'8CU46GP30',	'8CUR4F6MT',	'8CULEHCI1',	'8CUOBJI3C',	'8CU6Q3X71',	'8CU5W2U2C',	'8CUFF1N6I',	'8CU209O93',	'8CUI77D8Z',	'8CU1PB5XI',	'8CUPCH47K',	'8CUW7ZYP1',	'8CUGM51N1',	'8CU2X1IYE',	'8CUVQ518B',	'8CU4WD3OB',	'8CUCR6TW0',	'8CUISGL42',	'8CUSZSMLB',	'8CUK3Q46U',	'8CU4OI4JC',	'8CU3OEZUL',	'8CUAX165J',	'8CUN4W5ZP',	'8CUWEGF93',	'8CU2Y7985',	'8CU5J9ISQ',	'8CUDQ162T',	'8CU12P65Y',	'8CUKVGTM2',	'8CUQMM1HZ',	'8CU3S37EE',	'8CU3J9JQ0',	'8CU353K26',	'8CUS2VTU4',	'8CUN43P17',	'8CU9VOE6X',	'8CUOZ6S96',	'8CU4J217P',	'8CUK8EGA2',	'8CUL8Z4P3',	'8CU59Q3M6',	'8CUM3DRTE',	'8CU5Q5N6T',	'8CU8N1K53',	'8CU9634K2',	'8CU6YQ8QW',	'8CUO6737O',	'8CU1WW14N',	'8CUHM57PV',	'8CU7P5QV7',	'8CU85X3WX',	'8CUH68205',	'8CUOFY45K',	'8CUT6DL77',	'8CU52AGZN',	'8CUI7X87X',	'8CU4GOX81',	'8CUWN35A3',	'8CU3IPZW3',	'8CUJZ70FF',	'8CU5AEU31',	'8CUL2CW6V',	'8CU38O9VS',	'8CUDH1471',	'8CUME14FO',	'8CU1Z1C6I',	'8CUCZ0207',	'8CU2IJF65',	'8CU7TZ03C',	'8CUS2UAWR',	'8CU6USI7B',	'8CUDD460N',	'8CUK4843W',	'8CU75LJTS',	'8CUDVP96V',	'8CUX1826C',	'8CUV57Q5O',	'8CU1NI247',	'8CUK50055',	'8CU61P39K',	'8CUPJ5W6N',	'8CUJ3S7KV',	'8CURKID23',	'8CUY82DKD',	'8CUWOI9AW',	'8CUK617C1',	'8CUOKJ1BR',	'8CUI77351',	'8CUSB3Y76',	'8CUJ5I9ED',	'8CUD609M7',	'8CUDK2QZ2',	'8CUS1511B',	'8CUT5RW37',	'8CUT1Z653',	'8CUPO7228',	'8CUMEUXKO',	'8CUC40978',	'8CUK548M6',	'8CUM0528M',	'8CURAETX0',	'8CUFPROJJ',	'8CULYVX3M',	'8CUMI65P1',	'8CUWSO897',	'8CUU4524S',	'8CUKJHRB8',	'8CUN8XXW8',	'8CUHX5111',	'8CUON31VM',	'8CUF2Y1CF',	'8CUL44KU2',	'8CUYO62Y3',	'8CUUEL527',	'8CUD962R4',	'8CUQ144Y4',	'8CUW61QVH',	'8CUUVI68N',	'8CUES8DO5',	'8CUV28G2H',	'8CUHUGQ2G',	'8CUS55DOY',	'8CUDY4XD4',	'8CUCT2T57',	'8CUNZF441',	'8CUHBGL74',	'8CUQW327W',	'8CUPS2JN0',	'8CURNKI44',	'8CUV66V63',	'8CUWZD13V',	'8CUJNHT3B',	'8CUN47X56',	'8CUJZ5675',	'8CURO28R9',	'8CUF596DY',	'8CUXE1247',	'8CUXMRPI4',	'8CUJ2X682',	'8CUEY7YF5',	'8CUXV3MQ6',	'8CUD56M15',	'8CUXRIFQ2',	'8CUEIT71Q',	'8CUY4G4IH',	'8CUVFWDX4',	'8CURQ7UVW',	'8CUDVH64B',	'8CUCZ3CY5',	'8CUIB76OI',	'8CUNLW3P4',	'8CUVRH21J',	'8CUFCVF6V',	'8CUYYDE35',	'8CUM524GX',	'8CUQ8HO5F',	'8CUD851O8',	'8CUTH126L',	'8CUGJOY67',	'8CUT0318V',	'8CU5416B4',	'8CU75RTGG',	'8CU8L54HV',	'8CU5L27L3',	'8CU3JVG7R',	'8CU6REV8D',	'8CU8G48XU',	'8CU7GFI3Y',	'8CU2WC9LS',	'8CU34O54T',	'8CU623C3G',	'8CU279YD6',	'8CU22CE5X',	'8CU7KK5P5',	'8CU5N4Q4R',	'8CU59218C',	'8CU8J6JVY',	'8CU6RFN10',	'8CU7DC3D1',	'8CU7OLT19',	'8CU8QQV6W',	'8CU2V6JT6',	'8CU5IY74U',	'8CU7PY4G6',	'8CU2J6232',	'8CU27F565',	'8CU5HS8U2',	'8CU5LP2D4',	'8CU63145G',	'8CU5QT4X6',	'8CU1UW419',	'8CU7U4TR3',	'8CU30D803',	'8CU41FB8S',	'8CU3H8Z5L',	'8CU2V81K2',	'8CU1KO2N2',	'8CUA7B38H',	'8CU4785FS',	'8CU578MFO',	'8CU8MG4DT',	'8CU3PZ1I2',	'8CU67DBU0',	'8CU653PFY',	'8CU8SW59F',	'8CU2W8643',	'8CU314Z59',	'8CU65N707',	'8CU1VL578',	'8CU679RLM',	'8CU2I33OG',	'8CU1CVXP5',	'8CU1D26BF',	'8CU852X9R',	'8CU955JVX',	'8CU97SKQ4',	'8CU971W16',	'8CU3L24A1',	'8CU55M334',	'8CU2P562G',	'8CU1EFKI2',	'8CU87WF1D',	'8CU485LIE',	'8CU4LG626',	'8CU31NPKK',	'8CU6MQ4O2',	'8CUA58SJG',	'8CU7WFNN3',	'8CU4MH8RR',	'8CU5B62A1',	'8CUAG9JI3',	'8CU8142K0',	'8CU3QQ658',	'8CU36UKDE',	'8CU221YRQ',	'8CU3725X1',	'8CUB36983',	'8CU52TUNL',	'8CU584923',	'8CU849PMO',	'8CU16NKTZ',	'8CU38GM41',	'8CU42WNED',	'8CU4NNHCD',	'8CUST953J',	'8CU90V4LT',	'8CUM1Z2G8',	'8CUT4P08X',	'8CU311358',	'8CUPKE5RY',	'8CU6P9DG4',	'8CUR646E7',	'8CUN78Y41',	'8CU2549D3',	'8CUWMF98U',	'8CU494343',	'8CU5V65PX',	'8CUN8U1LX',	'8CU5KN78A',	'8CU54DJ4I',	'8CU8M5P7B',	'8CU9E838F',	'8CUQ87O80',	'8CU6RHBA3',	'8CU48068A',	'8CU785VIL',	'8CU939XD4',	'8CUP97C63',	'8CUC92VX6',	'8CUV30G42',	'8CULJ2L8Q',	'8CU8GI08N',	'8CU2Q4O6F',	'8CU84X179',	'8CUH6CR83',	'8CUJEM1AO',	'8CU7E4505',	'8CU4V40B1',	'8CUM8C151',	'8CU29N1R8',	'8CUV41OAH',	'8CU2C84BU',	'8CUL26IV2',	'8CUIOZQNV',	'8CU910636',	'8CUJN5H60',	'8CUOXGR19',	'8CUSYGGG2',	'8CUQOL6MF',	'8CUQQSH57',	'8CUL2446F',	'8CUM545EY',	'8CUABW64L',	'8CUJ2LRCU',	'8CU1QU6B2',	'8CU585TW4',	'8CU7KV0YC',	'8CUKWA788',	'8CUHN3BGE',	'8CUAU4D25',	'8CUX3I553',	'8CUY5V96Y',	'8CU72I3GT',	'8CU2ZBW87',	'8CUK5QD75',	'8CU62MU8E',	'8CUS3H6GJ',	'8CU12LGKP',	'8CUA525XP',	'8CU5V586L',	'8CU48T46H',	'8CUV87737',	'8CUXE280U',	'8CU598R9K',	'8CUVFT2XG',	'8CU5217S8',	'8CU117ALB',	'8CUF4MSM6',	'8CU81SHO3',	'8CUM3B8J1',	'8CUS3E7WK',	'8CU54N5CK'
)
and audit_spam_flag = 0
group by 1,2,3,4,5,6


Query 2 : 
select 
customer_id as cm_customer_id,
hb_audit_1 as hb_customer_id,
hb_audit_2 as hb_creative_id,
domain_name,
creative_id,
provider_group_id,
max_mkt,
max_partner_type, 
count(*) as adclicks,
sum(net_total_revenue) as net_total_revenue
from adclick
where ts between '2022040100' and '2022043023'
and customer_id IN ('8CU5RJ1PV',	'8CUN7S2PC',	'8CUWMI118',	'8CUU6IP82',	'8CU4O361K',	'8CUBQ50QO',	'8CU2F14C6',	'8CUM2PI55',	'8CU1WQ55F',	'8CUXP6AUQ',	'8CUG72UHU',	'8CU94FM32',	'8CUDF41E5',	'8CUCBP028',	'8CU65T3AT',	'8CU53284Y',	'8CU4171JQ',	'8CUIX8716',	'8CU3RXUW0',	'8CU81P3R7',	'8CUWMQE3H',	'8CUG548WD',	'8CU178IJL',	'8CU3HEJ2K',	'8CUQ5LJ63',	'8CU9Q74M4',	'8CUV8ML3S',	'8CU7O5VP2',	'8CUP4H3W6',	'8CULP3YQN',	'8CU93847Q',	'8CU64DMGW',	'8CUR746W0',	'8CUX1CQBH',	'8CUB4T860',	'8CUU26Z2M',	'8CUS7UNY8',	'8CUQT8U6U',	'8CUS47X5W',	'8CUZQP7LM',	'8CUAP6EAV',	'8CUSE9YI3',	'8CUJKX6Y3',	'8CUK2GD21',	'8CU1PLF6H',	'8CUQJV5RI',	'8CUM8Z8K6',	'8CUP6S26L',	'8CUT4OKFR',	'8CUI6FILU',	'8CU3VL6IT',	'8CU1VHFY1',	'8CU4P2DVS',	'8CU5H8BN8',	'8CUFH82F2',	'8CUEXS78H',	'8CU8ND892',	'8CU1AQFSQ',	'8CU3PXTSM',	'8CU62P57L',	'8CUODT3X1',	'8CU5BPU1N',	'8CUM9B2T4',	'8CUJ88Y7T',	'8CUV96EZ9',	'8CU6S1P10',	'8CU8M1K5Q',	'8CU5HO4YS',	'8CUMYV8E5',	'8CU10BY71',	'8CUT45X93',	'8CUOP71C6',	'8CUWFZQIA',	'8CU4JWBS7',	'8CUC52W5Z',	'8CU537PR5',	'8CUEFBGXD',	'8CU7HWCU5',	'8CU6O8H2I',	'8CU11Q2YE',	'8CUG2YC13',	'8CUVZNNSQ',	'8CUY8A14G',	'8CUNH9931',	'8CU4228XV',	'8CUZ97FOK',	'8CU5RIR4N',	'8CUQ5LDMC',	'8CUL7D4IC',	'8CU8V7RR1',	'8CU8E891J',	'8CUM9UIVO',	'8CUIPKDK2',	'8CU71351O',	'8CU2D7508',	'8CU4FCKBR',	'8CUP967L3',	'8CUMTQJ9K',	'8CUQU4XDV',	'8CUD83XHH',	'8CUW7O461',	'8CU1WP1QE',	'8CU524879',	'8CU6I65Y2',	'8CU4F53AF',	'8CUX8326C',	'8CU6F42V0',	'8CU3J73MR',	'8CUZ1IXN7',	'8CUW7N439',	'8CUY6F836',	'8CU6IH05N',	'8CU77E3RQ',	'8CUJ077YA',	'8CUP4292R',	'8CUXI53R1',	'8CUW7ANYT',	'8CU2DL1ZU',	'8CUEB4X2O',	'8CUPYY4YB',	'8CU16EX14',	'8CU7842Y4',	'8CUEA27X1',	'8CU54RJWV',	'8CU6R332J',	'8CUP2SL66',	'8CU2TVT31',	'8CURPH5LQ',	'8CU119M0Y',	'8CUNOYEI7',	'8CU5NI43I',	'8CUS86LIM',	'8CU3B0G4Y',	'8CUHC4XG3',	'8CU4XZW61',	'8CUGI2WH2',	'8CU148N1C',	'8CUPQV76X',	'8CU7FAK9R',	'8CUKLC2YL',	'8CU88W387',	'8CU2802E4',	'8CU81GHOQ',	'8CU9ETYEO',	'8CUVSM0M2',	'8CUTB109P',	'8CU6T5TK1',	'8CU17O663',	'8CURQY7JB',	'8CU42L9NI',	'8CU6N406F',	'8CUE0COQ1',	'8CUO93VI3',	'8CUQCBD94',	'8CUJ0P2FK',	'8CU231286',	'8CU75Q6EF',	'8CU2D0SFH',	'8CU2S1OVF',	'8CU8C99TC',	'8CUF2VP4M',	'8CU4NWR66',	'8CUX8PTS6',	'8CUNK6F3W',	'8CUVQ485G',	'8CUYT9A1U',	'8CU9YDG51',	'8CU5NHX53',	'8CUV8TI79',	'8CUYPJ17J',	'8CU3W6U34',	'8CU4C7W77',	'8CUZRQYX2',	'8CU3HLQQ8',	'8CULK68E5',	'8CU9T6PJ1',	'8CUBO6623',	'8CU166J74',	'8CUTHHI02',	'8CU35S6S8',	'8CU8D7LXY',	'8CU227GK5',	'8CUYW6X6S',	'8CUK96PL1',	'8CUP765MF',	'8CU1NA8RS',	'8CU42D0G6',	'8CU54EZ26',	'8CUAYJBD1',	'8CU7YXSCX',	'8CUM98PII',	'8CUQNE7C9',	'8CU445BSQ',	'8CU30419G',	'8CU57MZL9',	'8CUB2QZPF',	'8CUL25Q96',	'8CU5OA9BB',	'8CUBM7PS9',	'8CUWRWLVN',	'8CUB6BM1C',	'8CUS23II8',	'8CUQ33R4V',	'8CU2423U8',	'8CUVZN186',	'8CU50763W',	'8CUKNPB32',	'8CU182IQW',	'8CUSH2X3D',	'8CU2WOY7T',	'8CUS6UXIS',	'8CUG305TG',	'8CUD44L7E',	'8CU57255Z',	'8CUCF0I41',	'8CUD7XE27',	'8CU9SYDPW',	'8CUO0G425',	'8CU7FKFJ5',	'8CU3QVIY3',	'8CU243NR0',	'8CUT12E58',	'8CUP8MCN2',	'8CUPZRNGC',	'8CUKJ2T53',	'8CU31Q9C3',	'8CUIHXRCB',	'8CU84XVQ8',	'8CU51JJ6H',	'8CU7VGBS3',	'8CUP23WR7',	'8CUMPWGC4',	'8CUA9PA32',	'8CU77WCFU',	'8CU18B4NQ',	'8CUHP6A7G',	'8CU3FIF3U',	'8CU6EYVG2',	'8CU24OHNI',	'8CU2820C3',	'8CUF1OPX6',	'8CU91FWT4',	'8CUR6485G',	'8CUL75VT5',	'8CU4863Y1',	'8CUMGKIH7',	'8CU48256H',	'8CU89P1B2',	'8CUT17N89',	'8CU1505N7',	'8CUSL6ZG8',	'8CURVUW85',	'8CULO0ZW6',	'8CUV4EW5L',	'8CU3LF0L6',	'8CUR44F8I',	'8CU88PL31',	'8CU7IQYDP',	'8CU34GM3B',	'8CUM91JKH',	'8CUK6W0TJ',	'8CUXO07WH',	'8CU93S536',	'8CUT3KG4Y',	'8CU697NX8',	'8CUH2N5CE',	'8CU7Q2YSD',	'8CUPDVF0I',	'8CUUC7H2O',	'8CUUQ2YQI',	'8CU7U336X',	'8CUG37H35',	'8CUT0808N',	'8CU1H9730',	'8CUU550B8',	'8CULXDJ5I',	'8CU3XC7U4',	'8CUNXD177',	'8CUB6E4M5',	'8CU450BVR',	'8CU386Y6Y',	'8CU1H672G',	'8CU4B1S35',	'8CU4A6MMD',	'8CUD844J5',	'8CUOLF18F',	'8CU8WM007',	'8CU5IA67J',	'8CUM3O80K',	'8CU27488H',	'8CU40411F',	'8CU2SI52O',	'8CU28LO69',	'8CU1Z7OH0',	'8CU8K2P54',	'8CUG95H5Y',	'8CUH810F8',	'8CU2M20VF',	'8CUB9E4X4',	'8CU527E74',	'8CUHHG235',	'8CU2RRS6C',	'8CUPBNRC8',	'8CU7DV2WK',	'8CU46GP30',	'8CUR4F6MT',	'8CULEHCI1',	'8CUOBJI3C',	'8CU6Q3X71',	'8CU5W2U2C',	'8CUFF1N6I',	'8CU209O93',	'8CUI77D8Z',	'8CU1PB5XI',	'8CUPCH47K',	'8CUW7ZYP1',	'8CUGM51N1',	'8CU2X1IYE',	'8CUVQ518B',	'8CU4WD3OB',	'8CUCR6TW0',	'8CUISGL42',	'8CUSZSMLB',	'8CUK3Q46U',	'8CU4OI4JC',	'8CU3OEZUL',	'8CUAX165J',	'8CUN4W5ZP',	'8CUWEGF93',	'8CU2Y7985',	'8CU5J9ISQ',	'8CUDQ162T',	'8CU12P65Y',	'8CUKVGTM2',	'8CUQMM1HZ',	'8CU3S37EE',	'8CU3J9JQ0',	'8CU353K26',	'8CUS2VTU4',	'8CUN43P17',	'8CU9VOE6X',	'8CUOZ6S96',	'8CU4J217P',	'8CUK8EGA2',	'8CUL8Z4P3',	'8CU59Q3M6',	'8CUM3DRTE',	'8CU5Q5N6T',	'8CU8N1K53',	'8CU9634K2',	'8CU6YQ8QW',	'8CUO6737O',	'8CU1WW14N',	'8CUHM57PV',	'8CU7P5QV7',	'8CU85X3WX',	'8CUH68205',	'8CUOFY45K',	'8CUT6DL77',	'8CU52AGZN',	'8CUI7X87X',	'8CU4GOX81',	'8CUWN35A3',	'8CU3IPZW3',	'8CUJZ70FF',	'8CU5AEU31',	'8CUL2CW6V',	'8CU38O9VS',	'8CUDH1471',	'8CUME14FO',	'8CU1Z1C6I',	'8CUCZ0207',	'8CU2IJF65',	'8CU7TZ03C',	'8CUS2UAWR',	'8CU6USI7B',	'8CUDD460N',	'8CUK4843W',	'8CU75LJTS',	'8CUDVP96V',	'8CUX1826C',	'8CUV57Q5O',	'8CU1NI247',	'8CUK50055',	'8CU61P39K',	'8CUPJ5W6N',	'8CUJ3S7KV',	'8CURKID23',	'8CUY82DKD',	'8CUWOI9AW',	'8CUK617C1',	'8CUOKJ1BR',	'8CUI77351',	'8CUSB3Y76',	'8CUJ5I9ED',	'8CUD609M7',	'8CUDK2QZ2',	'8CUS1511B',	'8CUT5RW37',	'8CUT1Z653',	'8CUPO7228',	'8CUMEUXKO',	'8CUC40978',	'8CUK548M6',	'8CUM0528M',	'8CURAETX0',	'8CUFPROJJ',	'8CULYVX3M',	'8CUMI65P1',	'8CUWSO897',	'8CUU4524S',	'8CUKJHRB8',	'8CUN8XXW8',	'8CUHX5111',	'8CUON31VM',	'8CUF2Y1CF',	'8CUL44KU2',	'8CUYO62Y3',	'8CUUEL527',	'8CUD962R4',	'8CUQ144Y4',	'8CUW61QVH',	'8CUUVI68N',	'8CUES8DO5',	'8CUV28G2H',	'8CUHUGQ2G',	'8CUS55DOY',	'8CUDY4XD4',	'8CUCT2T57',	'8CUNZF441',	'8CUHBGL74',	'8CUQW327W',	'8CUPS2JN0',	'8CURNKI44',	'8CUV66V63',	'8CUWZD13V',	'8CUJNHT3B',	'8CUN47X56',	'8CUJZ5675',	'8CURO28R9',	'8CUF596DY',	'8CUXE1247',	'8CUXMRPI4',	'8CUJ2X682',	'8CUEY7YF5',	'8CUXV3MQ6',	'8CUD56M15',	'8CUXRIFQ2',	'8CUEIT71Q',	'8CUY4G4IH',	'8CUVFWDX4',	'8CURQ7UVW',	'8CUDVH64B',	'8CUCZ3CY5',	'8CUIB76OI',	'8CUNLW3P4',	'8CUVRH21J',	'8CUFCVF6V',	'8CUYYDE35',	'8CUM524GX',	'8CUQ8HO5F',	'8CUD851O8',	'8CUTH126L',	'8CUGJOY67',	'8CUT0318V',	'8CU5416B4',	'8CU75RTGG',	'8CU8L54HV',	'8CU5L27L3',	'8CU3JVG7R',	'8CU6REV8D',	'8CU8G48XU',	'8CU7GFI3Y',	'8CU2WC9LS',	'8CU34O54T',	'8CU623C3G',	'8CU279YD6',	'8CU22CE5X',	'8CU7KK5P5',	'8CU5N4Q4R',	'8CU59218C',	'8CU8J6JVY',	'8CU6RFN10',	'8CU7DC3D1',	'8CU7OLT19',	'8CU8QQV6W',	'8CU2V6JT6',	'8CU5IY74U',	'8CU7PY4G6',	'8CU2J6232',	'8CU27F565',	'8CU5HS8U2',	'8CU5LP2D4',	'8CU63145G',	'8CU5QT4X6',	'8CU1UW419',	'8CU7U4TR3',	'8CU30D803',	'8CU41FB8S',	'8CU3H8Z5L',	'8CU2V81K2',	'8CU1KO2N2',	'8CUA7B38H',	'8CU4785FS',	'8CU578MFO',	'8CU8MG4DT',	'8CU3PZ1I2',	'8CU67DBU0',	'8CU653PFY',	'8CU8SW59F',	'8CU2W8643',	'8CU314Z59',	'8CU65N707',	'8CU1VL578',	'8CU679RLM',	'8CU2I33OG',	'8CU1CVXP5',	'8CU1D26BF',	'8CU852X9R',	'8CU955JVX',	'8CU97SKQ4',	'8CU971W16',	'8CU3L24A1',	'8CU55M334',	'8CU2P562G',	'8CU1EFKI2',	'8CU87WF1D',	'8CU485LIE',	'8CU4LG626',	'8CU31NPKK',	'8CU6MQ4O2',	'8CUA58SJG',	'8CU7WFNN3',	'8CU4MH8RR',	'8CU5B62A1',	'8CUAG9JI3',	'8CU8142K0',	'8CU3QQ658',	'8CU36UKDE',	'8CU221YRQ',	'8CU3725X1',	'8CUB36983',	'8CU52TUNL',	'8CU584923',	'8CU849PMO',	'8CU16NKTZ',	'8CU38GM41',	'8CU42WNED',	'8CU4NNHCD',	'8CUST953J',	'8CU90V4LT',	'8CUM1Z2G8',	'8CUT4P08X',	'8CU311358',	'8CUPKE5RY',	'8CU6P9DG4',	'8CUR646E7',	'8CUN78Y41',	'8CU2549D3',	'8CUWMF98U',	'8CU494343',	'8CU5V65PX',	'8CUN8U1LX',	'8CU5KN78A',	'8CU54DJ4I',	'8CU8M5P7B',	'8CU9E838F',	'8CUQ87O80',	'8CU6RHBA3',	'8CU48068A',	'8CU785VIL',	'8CU939XD4',	'8CUP97C63',	'8CUC92VX6',	'8CUV30G42',	'8CULJ2L8Q',	'8CU8GI08N',	'8CU2Q4O6F',	'8CU84X179',	'8CUH6CR83',	'8CUJEM1AO',	'8CU7E4505',	'8CU4V40B1',	'8CUM8C151',	'8CU29N1R8',	'8CUV41OAH',	'8CU2C84BU',	'8CUL26IV2',	'8CUIOZQNV',	'8CU910636',	'8CUJN5H60',	'8CUOXGR19',	'8CUSYGGG2',	'8CUQOL6MF',	'8CUQQSH57',	'8CUL2446F',	'8CUM545EY',	'8CUABW64L',	'8CUJ2LRCU',	'8CU1QU6B2',	'8CU585TW4',	'8CU7KV0YC',	'8CUKWA788',	'8CUHN3BGE',	'8CUAU4D25',	'8CUX3I553',	'8CUY5V96Y',	'8CU72I3GT',	'8CU2ZBW87',	'8CUK5QD75',	'8CU62MU8E',	'8CUS3H6GJ',	'8CU12LGKP',	'8CUA525XP',	'8CU5V586L',	'8CU48T46H',	'8CUV87737',	'8CUXE280U',	'8CU598R9K',	'8CUVFT2XG',	'8CU5217S8',	'8CU117ALB',	'8CUF4MSM6',	'8CU81SHO3',	'8CUM3B8J1',	'8CUS3E7WK',	'8CU54N5CK'
)
and audit_spam_flag = 0
group by 1,2,3,4,5,6,7,8


Tables stored :

1: SELECT * FROM misc.rozario_april_22_ybnca_demand_with_hbcustomer_hbadtag



2.Getting Data From MAX

Get file from darshil with the following dimensions

Stats Month | Transaction Month | Partner ID | Partner Name | Advertiser ID | Advertiser Name | Sync Partner ID | Sync Partner Name | Publisher ID | Parent Publisher ID | Domain Name | Ad Tag | Marketplace | Traffic Source | System cost | Adv cost | Conversion Value | Advertiser value | Audited Revenue | Audit Channel
3.Cleaning domains in python 








Table stored as : 
Max data after cleaning : misc.max_april_22_data_with_clean_domains

Vogon data after cleaning : april_22_ybnca_data_from_vogon

4.Distributing Inter BT external advertiser cost for BT 3 max cost file has all partners

Query:
------------------
--check for total
--
--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM 
--misc.max_april_22_data_with_clean_domains
--
-----------------
-- Filering max data with clean domains

WITH filtered_max_22
 (
 	select 
        	a.Month,
        	a.Transaction_Month,
        	a.publisher_id,
        	a.domain,
        	a.sub_sub_publisher_id as creative_id,
        	a.market_place_key,
        	a.market_place_name,
        	a.audit_channel,
        	a.parent_publisher_id,
        	a.sync_partner_id,
        	a.partner_id,
        	a.partner_name,
        	a.sync_partner_name,
        	a.traffic_source,
        	sum(a.system_cost) as system_cost,
        	sum(a.advertiser_cost) as advertiser_cost,
        	sum(a.conversion_payout) as conversion_payout,
        	sum(a.advertiser_value) as advertiser_value,
        	sum(a.audited_revenue) as audited_revenue
	from 
			misc.max_april_22_data_with_clean_domains  a
WHERE
			a.transaction_month = 'April, 2022' AND
        	a.sync_partner_id = 1 

group by
			1,2,3,4,5,6,7,8,9,10,11,12,13,14
)   

--SELECT * FROM filtered_max_22

--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM 
--filtered_max_22
---------------------

--adding inter/intrabt flag

,imp_join 
 (
 	select 
        	a.Month,
        	a.Transaction_Month,
        	a.publisher_id,
        	a.domain,
        	a.creative_id,
        	a.market_place_key,
        	a.market_place_name,
        	a.audit_channel,
        	a.parent_publisher_id,
        	a.sync_partner_id,
        	a.partner_id,
        	a.partner_name,
        	a.sync_partner_name,
        	a.traffic_source,
   			b.partner_bt,
        	b.implementation_flag,
        	sum(a.system_cost) as system_cost,
        	sum(a.advertiser_cost) as advertiser_cost,
        	sum(a.conversion_payout) as conversion_payout,
        	sum(a.advertiser_value) as advertiser_value,
        	sum(a.audited_revenue) as audited_revenue
	from 
			filtered_max_22  a
LEFT JOIN
			misc.max_cost_mapping_april_2022 b
	ON 
			b.max_partner_id = a.partner_id
	group by
			1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
 )
 
-- SELECT distinct partner_bt FROM imp_join
 
 --SELECT distinct implementation_flag FROM imp_join
 
--SELECT * FROM  
--misc.max_cost_mapping_april_2022 
--LIMIT 10
 
 --SELECT 
	--		sum(system_cost) as system_cost,
 --       	sum(advertiser_cost) as advertiser_cost,
 --       	sum(conversion_payout) as conversion_payout,
 --       	sum(advertiser_value) as advertiser_value,
 --       	sum(audited_revenue) as audited_revenue
--FROM imp_join

--SELECT * FROM imp_join
--LIMIT 10
--
-------------------
-- with and without Inter BT/Intra BT

--,april_22_not_inter
--(SELECT 
--  	*,
--  	0 as  advertiser_value_external
--  FROM 
--  	imp_join
-- 	WHERE --Transaction_Month = 'April, 2022' AND 
-- 	implementation_flag NOT IN ('Inter BT/Intra BT')
-- 	AND implementation_flag IS NULL
-- 	AND partner_bt NOT IN  ('BT-3')
-- 	AND partner_bt IS NULL
-- )
--SELECT * FROM april_22_not_inter
--LIMIT 10


--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM april_22_not_inter

,april_22_w_adv_ext
 (
 	SELECT *,
  	CASE WHEN implementation_flag IN ('Inter BT/Intra BT') AND partner_bt IN ('BT-3') THEN 
  	2692011.08  
   	ELSE 0
    END as  advertiser_value_external
  	FROM 
  	imp_join
 	--WHERE --Transaction_Month = 'April, 2022' AND
   --implementation_flag IN ('Inter BT/Intra BT')
 	--AND partner_bt IN ('BT-3')
 )

--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM april_22_w_adv_ext
 
 
--SELECT * FROM april_22_w_inter

,distribution(
  
SELECT 
  *,
  advertiser_cost/(SELECT sum(advertiser_cost) FROM april_22_w_adv_ext WHERE implementation_flag IN ('Inter BT/Intra BT')
 	AND partner_bt IN ('BT-3'))   as advertiser_percent_dist,
  (advertiser_cost/(SELECT sum(advertiser_cost) FROM april_22_w_adv_ext WHERE implementation_flag IN ('Inter BT/Intra BT')
 	AND partner_bt IN ('BT-3')))*advertiser_value_external as advertiser_value_external_dist
   FROM april_22_w_adv_ext
)

SELECT 
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
FROM distribution





--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from distribution 
   

TABLE STORED :

dump: misc.vogon_april_22_max_data_with_bt3_interbt_external_cost_dist

—----------------------------------------------------------------------------------------------------------------------------





5. Filtering for Just YBNCA DEMAND and sync partner : 1

QUERY : 

FILTERING FOR YBNCA DEMAND IN MAX FILE with distributed external advertiser cost april 22 

-- Redoing the max file part

WITH filtered_max_22
 (
SELECT 
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
FROM misc.vogon_april_22_max_data_with_bt3_interbt_external_cost_dist
WHERE
     parent_publisher_id = '8PRVCXX19'
)   
--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from filtered_max_22 


,updating_imp
(
  SELECT 
		*,
    	CASE WHEN partner_name= 'Perform Media Lead Gen partner' then 'Leadgen_Others'
    	else implementation_flag END as implementation_flag_v1
  FROM
  		filtered_max_22
 )

--------------------------------------

-- Filtering for only max data hence including others

,removing_others(

SELECT 
		*
FROM
		updating_imp
WHERE 
		implementation_flag_v1 <> 'Others'
)
------------------------------------
--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from removing_others 


-- correcting implementation flag so that join is possible

,corrections(

SELECT
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,lower(market_place_key) market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,CASE WHEN implementation_flag_v1 = 'Inter BT/Intra BT' then 'Inter BT' ELSE implementation_flag_v1 END as implementation_flag_v2
FROM 
removing_others
)

SELECT * FROM corrections



--SELECT 
--DISTINCT market_place_key
--FROM corrections


Table stored : 
Misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost

misc.max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_22



6. Joining MAX and YBNCA vogon data

Query : 
FULL OUTER JOIN between max darshil data and max vogon data



--adding max flag to darshils data
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

-- Checks

--	SELECT DISTINCT max_partner_type FROM max_filtered
        
--SELECT 
--		sum(advertiser_value_external_dist) advertiser_value_external_dist,
--		SUM(system_cost) as system_cost,
-- 	    SUM(advertiser_cost) advertiser_cost,
--  	SUM(conversion_payout) conversion_payout,
--  	SUM(advertiser_value) advertiser_value,
--  	SUM(audited_revenue) audited_revenue
--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.april_22_ybnca_data_from_vogon
)


-- Checks

--SELECT 
--SUM(adclicks) as adclicks
--,sum(net_total_revenue)
--FROM ybnca_data_from_vogon_with_max_flag


--SELECT * FROM ybnca_data_from_vogon_with_max_flag
--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			customer_id,
  			domain,
  			CAST (creative_id  as float) creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8
)


-- CHECKS


--SELECT sum(net_total_revenue)
--FROM max_data_in_analytics

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns

,filtered_max_vogon
(
  	SELECT 
  			customer_id,
  			domain,
  			creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7
)


-------------------------


--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT

				COALESCE(a.customer_id,b.customer_id)  customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.creative_id,b.creative_id)  creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue ,
  				b.advertiser_value_external_dist

	FROM
  				filtered_max_vogon a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)


-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_analytics



-------------------------------

-- filtering non max data from vogon

,non_max_data_in_vogon
(
  	SELECT 	 
  			customer_id,
  			domain,
  			creative_id,
  			provider_group_id,
  			max_mkt,
  			max_partner_type,
  			max_flag,
  			sum(adclicks) adclicks,
  			sum(net_total_revenue) net_total_revenue,
  			sum(0) AS system_cost,
      		sum(0) AS advertiser_cost,
      		sum(0) AS conversion_payout,
      		sum(0) AS advertiser_value,
      		sum(0) AS audited_revenue,
  			sum(0) AS advertiser_value_external_dist
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  GROUP BY 1,2,3,4,5,6,7
)

--CHECKS


--SELECT sum(tac_db_dist),	
--  			sum(adclicks),
--  			sum(net_total_revenue)
--     FROM non_max_data_in_analytics


-----------------------------



--UNION BETWEEN MAX AND NON MAX DATA


, final_union (
SELECT * FROM non_max_data_in_vogon
UNION 
SELECT * FROM joining_max_from_darshil_and_vogon 
)  


--CHECKS


--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from final_union


--------------------------------------------------


-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.customer_id=b.customer_id
)



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.creative_id= cast(b.creative_id as float)
  AND a.customer_id = b.customer_id
)


,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

    
select * from ad_provider_master

----------------------


Query version 2:


--adding max flag to darshils data , provider_group_id 12 
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_22
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

--SELECT customer_id,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_filtered
--GROUP BY 1     



--, max_filtered_removing_nulls(
--	SELECT  
--			customer_id ,
--  			domain,
--  			creative_id,
--  			max_mkt,
--  			max_partner_type,
--  			provider_group_id,
--  			max_flag,
--  			REPLACE(system_cost,'null',0) as system_cost,
--	 	    REPLACE(advertiser_cost,'null',0) advertiser_cost,
--      		REPLACE(conversion_payout,'null',0) conversion_payout,
--      		REPLACE(advertiser_value,'null',0) advertiser_value,
--      		REPLACE(audited_revenue,'null',0) audited_revenue,
--  			REPLACE(advertiser_value_external_dist,'null',0) advertiser_value_external_dist
--  	FROM
--			max_filtered
--  	)







-- CHECK FOR PARTNER TYPE
	--	SELECT DISTINCT max_partner_type FROM max_filtered


-- CHECK FOR OVERALL STATS
	--SELECT 
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
		--	SUM(system_cost) as system_cost,
	 	--    SUM(advertiser_cost) advertiser_cost,
	  	--SUM(conversion_payout) conversion_payout,
	  	--SUM(advertiser_value) advertiser_value,
	  	--SUM(audited_revenue) audited_revenue
	--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag to YBNCA data from vogon

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.vogon_rozario_april_22_ybnca_demand_with_hbcustomer_hbadtag
  
)


-- Checks for overall stats
	--SELECT 
	--SUM(adclicks) as adclicks
	--,sum(net_total_revenue)
	--FROM ybnca_data_from_vogon_with_max_flag

-- Checks for flags in NON_MAX
	--SELECT * FROM ybnca_data_from_vogon_with_max_flag
	--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data and adding 12 as provider group

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9,10
)

--SELECT * FROM data_filtered_for_max_in_vogon_ybnca_data

-- CHECKS


--SELECT sum(adclicks),sum(net_total_revenue)
--FROM data_filtered_for_max_in_vogon_ybnca_data

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns to take just the provider_group_id_v1 

,filtered_max_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain,
  			cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7,8,9
)


-------------------------
-- taking dimensionwise total adclicks

,dimension_wise_adclicks
(
SELECT 
  cm_customer_id,
  domain,
  provider_group_id_v1,
  cm_creative_id,
  max_mkt,
  max_partner_type,
  SUM(adclicks) total_dimension_adclicks 
FROM 
  filtered_max_vogon 
GROUP BY 1,2,3,4,5,6
)

--SELECT * FROM dimension_wise_adclicks
--LIMIT 100

--SELECT SUM(total_dimension_adclicks)  FROM dimension_wise_adclicks


--------------------------------

--adding the dimensionwise total clicks column

,adding_dimensionwise_adclicks
(
SELECT
  a.*,
  b.total_dimension_adclicks as total_dimension_adclicks
  FROM filtered_max_vogon a
  LEFT JOIN dimension_wise_adclicks b  
	ON	a.cm_customer_id=b.cm_customer_id
  	AND a.domain=b.domain
  	AND a.provider_group_id_v1=b.provider_group_id_v1
  	AND a.cm_creative_id=b.cm_creative_id
  	AND a.max_mkt=b.max_mkt
  	AND a.max_partner_type=b.max_partner_type
  		
)

--SELECT *  FROM dimension_wise_adclicks
--WHERE total_dimension_adclicks = 'null'

--SELECT * FROM adding_dimensionwise_adclicks




--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT
				
				COALESCE(a.cm_customer_id,b.customer_id)  cm_customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.cm_creative_id,b.creative_id)  cm_creative_id,
  				a.hb_customer_id,
  				a.hb_creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
  				a.total_dimension_adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue,
  				b.advertiser_value_external_dist

	FROM
  				adding_dimensionwise_adclicks a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)

--SELECT
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
	--	from joining_max_from_darshil_and_vogon
--GROUP BY 1      

--SELECT * FROM joining_max_from_darshil_and_vogon
--WHERE adclicks = 'null'

-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_vogon



-------------------------------
--MAX METRICS DISTRIBUTION

,max_metrics_distribution
( 
SELECT 
	cm_customer_id,
	domain,
	cm_creative_id,
	hb_customer_id,
	hb_creative_id,
	provider_group_id,
	max_mkt,
	max_partner_type,
	max_flag,
  	adclicks,
  	net_total_revenue,
	((adclicks)/(total_dimension_adclicks)) * system_cost as system_cost,
	((adclicks)/(total_dimension_adclicks)) * advertiser_cost  as  advertiser_cost ,
	((adclicks)/(total_dimension_adclicks)) * conversion_payout as  conversion_payout ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value as  advertiser_value ,
	((adclicks)/(total_dimension_adclicks)) * audited_revenue as  audited_revenue ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value_external_dist as  advertiser_value_external_final
FROM	 	
  joining_max_from_darshil_and_vogon
)





--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_metrics_distribution




,joining_with_max_filtered_for_nulls(
 	SELECT 
  	a.cm_customer_id,
	a.domain,
	a.cm_creative_id,
	a.hb_customer_id,
	a.hb_creative_id,
	a.provider_group_id,
	a.max_mkt,
	a.max_partner_type,
	a.max_flag,
	a.adclicks,
  	a.net_total_revenue,
	COALESCE(a.system_cost,b.system_cost) system_cost_final,
	COALESCE(a.advertiser_cost,b.advertiser_cost) advertiser_cost_final,
	COALESCE(a.conversion_payout,b.conversion_payout) conversion_payout_final,
	COALESCE(a.advertiser_value,b.advertiser_value) advertiser_value_final,
	COALESCE(a.audited_revenue,b.audited_revenue) audited_revenue_final,
	COALESCE(a.advertiser_value_external_final,b.advertiser_value_external_dist) advertiser_value_external
  FROM max_metrics_distribution a
  LEFT JOIN max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			
)

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from joining_with_max_filtered_for_nulls
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        




,non_max_data_in_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue,
  			0 as system_cost_final,	
	 		0 as advertiser_cost_final,
	 		0 as conversion_payout_final,
	 		0 as advertiser_value_final,
	 		0 as audited_revenue_final,
	 		0 as advertiser_value_external
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9
)
  
--UNION BETWEEN MAX AND NON MAX DATA


, final_union (
SELECT * FROM non_max_data_in_vogon
UNION 
SELECT * FROM joining_with_max_filtered_for_nulls 
)  
  
  

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from final_union
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        

-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.cm_customer_id=b.customer_id
)



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.cm_creative_id= cast(b.creative_id as float)
  AND a.cm_customer_id = b.customer_id
)


,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

    
select * from ad_provider_master



Query version 3:

#vogon-worker-gamma


--adding max flag to darshils data , provider_group_id 12 
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_22
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

--SELECT 
--DISTINCT max_mkt
--FROM
--max_filtered



--SELECT customer_id,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_filtered
--GROUP BY 1     



--, max_filtered_removing_nulls(
--	SELECT  
--			customer_id ,
--  			domain,
--  			creative_id,
--  			max_mkt,
--  			max_partner_type,
--  			provider_group_id,
--  			max_flag,
--  			REPLACE(system_cost,'null',0) as system_cost,
--	 	    REPLACE(advertiser_cost,'null',0) advertiser_cost,
--      		REPLACE(conversion_payout,'null',0) conversion_payout,
--      		REPLACE(advertiser_value,'null',0) advertiser_value,
--      		REPLACE(audited_revenue,'null',0) audited_revenue,
--  			REPLACE(advertiser_value_external_dist,'null',0) advertiser_value_external_dist
--  	FROM
--			max_filtered
--  	)







-- CHECK FOR PARTNER TYPE
	--	SELECT DISTINCT max_partner_type FROM max_filtered


-- CHECK FOR OVERALL STATS
	--SELECT 
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
		--	SUM(system_cost) as system_cost,
	 	--    SUM(advertiser_cost) advertiser_cost,
	  	--SUM(conversion_payout) conversion_payout,
	  	--SUM(advertiser_value) advertiser_value,
	  	--SUM(audited_revenue) audited_revenue
	--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag to YBNCA data from vogon

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.vogon_rozario_april_22_ybnca_demand_with_hbcustomer_hbadtag
  
)


-- Checks for overall stats
	--SELECT 
	--SUM(adclicks) as adclicks
	--,sum(net_total_revenue)
	--FROM ybnca_data_from_vogon_with_max_flag

-- Checks for flags in NON_MAX
	--SELECT * FROM ybnca_data_from_vogon_with_max_flag
	--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data and adding 12 as provider group

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9,10
)

--SELECT 
--DISTINCT max_mkt
--FROM
--data_filtered_for_max_in_vogon_ybnca_data


--SELECT * FROM data_filtered_for_max_in_vogon_ybnca_data

-- CHECKS


--SELECT sum(adclicks),sum(net_total_revenue)
--FROM data_filtered_for_max_in_vogon_ybnca_data

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns to take just the provider_group_id_v1 

,filtered_max_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain,
  			cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7,8,9
)


-------------------------
-- taking dimensionwise total adclicks

,dimension_wise_adclicks
(
SELECT 
  cm_customer_id,
  domain,
  provider_group_id_v1,
  cm_creative_id,
  max_mkt,
  max_partner_type,
  SUM(adclicks) total_dimension_adclicks 
FROM 
  filtered_max_vogon 
GROUP BY 1,2,3,4,5,6
)

--SELECT * FROM dimension_wise_adclicks
--LIMIT 100

--SELECT SUM(total_dimension_adclicks)  FROM dimension_wise_adclicks


--------------------------------

--adding the dimensionwise total clicks column

,adding_dimensionwise_adclicks
(
SELECT
  a.*,
  b.total_dimension_adclicks as total_dimension_adclicks
  FROM filtered_max_vogon a
  LEFT JOIN dimension_wise_adclicks b  
	ON	a.cm_customer_id=b.cm_customer_id
  	AND a.domain=b.domain
  	AND a.provider_group_id_v1=b.provider_group_id_v1
  	AND a.cm_creative_id=b.cm_creative_id
  	AND a.max_mkt=b.max_mkt
  	AND a.max_partner_type=b.max_partner_type
  		
)

--SELECT *  FROM dimension_wise_adclicks
--WHERE total_dimension_adclicks = 'null'

--SELECT * FROM adding_dimensionwise_adclicks




--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT
				
				COALESCE(a.cm_customer_id,b.customer_id)  cm_customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.cm_creative_id,b.creative_id)  cm_creative_id,
  				a.hb_customer_id,
  				a.hb_creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
  				a.total_dimension_adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue,
  				b.advertiser_value_external_dist

	FROM
  				adding_dimensionwise_adclicks a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)

--SELECT DISTINCT max_mkt FROM joining_max_from_darshil_and_vogon

--SELECT
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
	--	from joining_max_from_darshil_and_vogon
--GROUP BY 1      

--SELECT * FROM joining_max_from_darshil_and_vogon
--WHERE adclicks = 'null'

-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_vogon



-------------------------------
--MAX METRICS DISTRIBUTION

,max_metrics_distribution
( 
SELECT 
	cm_customer_id,
	domain,
	cm_creative_id,
	hb_customer_id,
	hb_creative_id,
	provider_group_id,
	max_mkt,
	max_partner_type,
	max_flag,
  	adclicks,
  	net_total_revenue,
	((adclicks)/(total_dimension_adclicks)) * system_cost as system_cost,
	((adclicks)/(total_dimension_adclicks)) * advertiser_cost  as  advertiser_cost ,
	((adclicks)/(total_dimension_adclicks)) * conversion_payout as  conversion_payout ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value as  advertiser_value ,
	((adclicks)/(total_dimension_adclicks)) * audited_revenue as  audited_revenue ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value_external_dist as  advertiser_value_external_final
FROM	 	
  joining_max_from_darshil_and_vogon
)

--select DISTINCT max_mkt FROM max_metrics_distribution



--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_metrics_distribution




,joining_with_max_filtered_for_nulls(
 	SELECT 
  	a.cm_customer_id,
	a.domain,
	a.cm_creative_id,
	a.hb_customer_id,
	a.hb_creative_id,
	a.provider_group_id,
	a.max_mkt,
	a.max_partner_type,
	a.max_flag,
	a.adclicks,
  	a.net_total_revenue,
	COALESCE(a.system_cost,b.system_cost) system_cost_final,
	COALESCE(a.advertiser_cost,b.advertiser_cost) advertiser_cost_final,
	COALESCE(a.conversion_payout,b.conversion_payout) conversion_payout_final,
	COALESCE(a.advertiser_value,b.advertiser_value) advertiser_value_final,
	COALESCE(a.audited_revenue,b.audited_revenue) audited_revenue_final,
	COALESCE(a.advertiser_value_external_final,b.advertiser_value_external_dist) advertiser_value_external
  FROM max_metrics_distribution a
  LEFT JOIN max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			
)

--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls


--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls



--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from joining_with_max_filtered_for_nulls
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        




,non_max_data_in_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			provider_group_id,
  			max_mkt,
  			max_partner_type,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue,
  			0 as system_cost_final,	
	 		0 as advertiser_cost_final,
	 		0 as conversion_payout_final,
	 		0 as advertiser_value_final,
	 		0 as audited_revenue_final,
	 		0 as advertiser_value_external
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9
)


--UNION BETWEEN MAX AND NON MAX DATA


,final_union (
SELECT * FROM non_max_data_in_vogon
UNION ALL
SELECT * FROM joining_with_max_filtered_for_nulls 
)  

--SELECT DISTINCT max_mkt FROM final_union
  

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from final_union
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        

-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.cm_customer_id=b.customer_id
)
--SELECT * FROM customerm
--LIMIT 5



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.cm_creative_id= cast(b.creative_id as float)
  AND a.cm_customer_id = b.customer_id
)

SELECT * FROM creative_m
--LIMIT 5




,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

SELECT * FROM ad_provider_master

    
select * from ad_provider_master




 
Table stored : 
 Misc.vogon_ybnca_2022_april_after_join_with_ext_adv_cost
ybnca_2022_april_after_join_with_ext_adv_cost_max_dist

ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost

ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost_v1



—-----------------------------------------------------------------------------------------------

7. Taking  TAC from HB reports
TAKE PARTNER filters as below
For 2022

http://mnet-url.media.net/F8F982AC-0EAE-44CB-A9C8-31D61C8EE3C7






For 2023 ADD VALUE X 

http://mnet-url.media.net/CCB8F8F5-AF42-4E53-9ACE-748434FD4CBF







8. Taking  hb reports data and inserting in vogon

QUERY : 

------------------------------------------------------------

--April 22 HB reports TAC data

--DESCRIBE misc.ybnca_demand_april_22_hb_tac

SELECT
`Publisher` as hb_customer_name,
`Publisher Id` as hb_customer_id,
`AdSlot` as hb_creative_name,
`AdSlot Id` as hb_creative_id,
`Site` as domain,
`Net Pub Revenue (MN)` as hb_tac
FROM 
misc.ybnca_demand_april_22_hb_tac




--TABLE SAVED AS : april_22_hb_tac

-------------------------------------------------------------

--April 22 HB reports TAC data


--DESCRIBE misc.ybnca_demand_april_23_hb_tac


SELECT
`Publisher` as hb_customer_name,
`Publisher Id` as hb_customer_id,
`AdSlot` as hb_creative_name,
`AdSlot Id` as hb_creative_id,
`Site` as domain,
`Net Pub Revenue (MN)` as hb_tac
FROM 
misc.ybnca_demand_april_23_hb_tac


--TABLE SAVED AS : april_23_hb_tac


-------------------------------------------------------------

-- adding inflating hb tac customers


--for 2022 april

--DESCRIBE misc.inflating_tac_data_april_22

SELECT
`Publisher` as hb_customer_name,
`Publisher Id` as hb_customer_id,
`Mnet AdSlot` as hb_creative_name,
`Mnet AdSlot Id` as hb_creative_id,
`Site` as domain,
`Net Pub Revenue (MN)` as hb_tac
FROM 
misc.inflating_tac_data_april_22


--Table Name : april_22_hb_tac_for_tac_inflating_customers



--for 2023 april

--DESCRIBE misc.inflating_tac_data_april_23

SELECT
`Publisher` as hb_customer_name,
`Publisher Id` as hb_customer_id,
`Mnet AdSlot` as hb_creative_name,
`Mnet AdSlot Id` as hb_creative_id,
`Site` as domain,
`Net Pub Revenue (MN)` as hb_tac
FROM 
misc.inflating_tac_data_april_23


-- TABLE NAME STORED : april_23_hb_tac_for_tac_inflating_customers



9. Remove inflated data and adding uninflated data from  HB reports

Query : 


-- combining tac 

-- Filtering out customers that are causing inflation of tac


------------------------------------------------------------------------
-- FOR APRIL 22

-- customers : '8CUMP71D3'

with hb_data_22_filtered(
SELECT *
FROM misc.vogon_april_22_hb_tac
WHERE 
hb_customer_id <> '8CUMP71D3'
)

,union_22_cte(
SELECT * FROM hb_data_22_filtered
UNION ALL 
SELECT * FROM  misc.vogon_april_22_hb_tac_for_tac_inflating_customers
)

--SELECT * FROM union_22_cte


TABLE UNION 22  : misc.vogon_apr_22_hb_tac_without_inflated_customers


--SELECT sum(hb_tac) FROM union_22_cte
--WHERE hb_customer_id = '8CUMP71D3'

----------------------------------------------------------------------------


-- FOR APRIL 23

-- customers : '8CUMP71D3','8CU34Q8WJ','8CUE04GXY'

,hb_data_23_filtered(
SELECT *
FROM misc.vogon_april_23_hb_tac
WHERE 
hb_customer_id NOT IN ('8CUMP71D3','8CU34Q8WJ','8CUE04GXY')
)

,union_23_cte(
SELECT * FROM hb_data_23_filtered
UNION ALL 
SELECT * FROM  misc.vogon_april_23_hb_tac_for_tac_inflating_customers
)



--SELECT hb_customer_id,sum(hb_tac) FROM union_23_cte
--WHERE hb_customer_id IN ('8CUMP71D3','8CU34Q8WJ','8CUE04GXY')
--GROUP BY 1


--SELECT * FROM union_23_cte

TABLE UNION 23  : misc.apr_23_hb_tac_without_inflated_customers


--------------------------------------------------------------------------------------------------------




















10. Distributing TAC from HB reports

QUERY:





with handling_null_adclicks(
SELECT	
  	customer_id
	,domain
	,creative_id
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,customer_fullname
	,creative_name
	,provider_group_name
FROM
  	misc.vogon_ybnca_2022_april_after_join_with_ext_adv_cost
)

-- GETTING HB CUSTOMER ID FROM MAPPER 
,adding_hb_customer
(
SELECT 
  'April 2022' as month,
  a.*,
  b.hb_customer_id
  FROM handling_null_adclicks a
LEFT JOIN misc.cm_to_hb_mapper_Jan22_to_Apr23 b 
ON b.cm_customer_id = a.customer_id
)
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
--SELECT * FROM adding_hb_customer
--LIMIT 5

-- taking sum of adclicks based on month and hb_customer_id in separate cte

,cust_wise_adclicks
(
SELECT 
  'April 2022' as month,
  hb_customer_id,
  SUM(adclicks) adclicks 
FROM 
  adding_hb_customer 
GROUP BY 1,2
)
--SELECT * FROM cust_wise_adclicks
--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  adding_hb_customer a
  LEFT JOIN cust_wise_adclicks b  
	on b.month = a.month
  AND b.hb_customer_id = a.hb_customer_id
)
--SELECT *
--        FROM adding_custwise_adclicks

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data



,adding_month_to_22_hb_reports_data
(
SELECT
  'April 2022' as month,
  *
  FROM misc.april_22_ybnca_tac_from_hb_customer_v1
)



--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.month
  	,a.customer_id as cm_customer_id
	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
	,a.domain
	,a.creative_id
	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external_dist
	,a.customer_fullname
	,a.creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN adding_month_to_22_hb_reports_data b 
	on b.month = a.month
  	AND b.hb_customer_id = a.hb_customer_id
)



--select * FROM joining_hb_tac_data_with_meta_data


--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN adding_month_to_22_hb_reports_data b 
  	ON b.hb_customer_id = a.hb_customer_id
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
		month
  		,cm_customer_id
		,hb_customer_id
  		,customer_fullname
		,domain
		,creative_id
  		,creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query


--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external_dist)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


SELECT * FROM final_query

—-----------------------------------------------------------------------------------------------------------

Query_v2:




with handling_null_adclicks(
SELECT	
  	customer_id
	,domain
	,creative_id
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,customer_fullname
	,creative_name
	,provider_group_name
FROM
  	misc.vogon_ybnca_2022_april_after_join_with_ext_adv_cost
)

-- GETTING HB CUSTOMER ID FROM MAPPER 
,adding_hb_customer
(
SELECT 
  'April 2022' as month,
  a.*,
  b.hb_customer_id
  FROM handling_null_adclicks a
LEFT JOIN misc.cm_to_hb_mapper_Jan22_to_Apr23 b 
ON b.cm_customer_id = a.customer_id
)
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
--SELECT * FROM adding_hb_customer
--LIMIT 5

-- taking sum of adclicks based on month and hb_customer_id in separate cte

,cust_wise_adclicks
(
SELECT 
  'April 2022' as month,
  hb_customer_id,
  SUM(adclicks) adclicks 
FROM 
  adding_hb_customer 
GROUP BY 1,2
)
--SELECT * FROM cust_wise_adclicks
--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  adding_hb_customer a
  LEFT JOIN cust_wise_adclicks b  
	on b.month = a.month
  AND b.hb_customer_id = a.hb_customer_id
)
--SELECT *
--        FROM adding_custwise_adclicks

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data



,adding_month_to_22_hb_reports_data
(
SELECT
  'April 2022' as month,
  *
  FROM misc.april_22_ybnca_tac_from_hb_customer_v1
)



--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	COALESCE(a.month,b.month) as month
  	,a.customer_id as cm_customer_id
	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
	,a.domain
	,a.creative_id
	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external_dist
	,a.customer_fullname
	,a.creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN adding_month_to_22_hb_reports_data b 
	on b.month = a.month
  	AND b.hb_customer_id = a.hb_customer_id
)



--select * FROM joining_hb_tac_data_with_meta_data


--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN adding_month_to_22_hb_reports_data b 
  	ON b.hb_customer_id = a.hb_customer_id
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
		month
  		,cm_customer_id
		,hb_customer_id
  		,customer_fullname
		,domain
		,creative_id
  		,creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query


--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external_dist)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query


QUERY_v3:


---------------------------------------------------------------

--handling null adclicks from vogon_meta_data


with handling_null_adclicks(
SELECT	
  	cm_customer_id
	,domain
	,cm_creative_id
	,hb_customer_id
	,hb_creative_id
  	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost_final as  system_cost
	,advertiser_cost_final as advertiser_cost
	,conversion_payout_final as conversion_payout
	,advertiser_value_final as advertiser_value
	,audited_revenue_final as audited_revenue
	,advertiser_value_external
	,customer_fullname as cm_customer_fullname
	,creative_name as cm_creative_name
	,provider_group_name 
FROM
  	misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
)

--SELECT * FROM handling_null_adclicks
--LIMIT 2


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost) ,
-- 	   		SUM(advertiser_cost) ,
--    		SUM(conversion_payout), 
--    		SUM(advertiser_value) ,
--    		SUM(audited_revenue), 
--			sum(advertiser_value_external) 
--		from handling_null_adclicks






--SELECT * FROM misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
--LIMIT 2


----------------------------------------------------------------------------------------------------------



,dimension_wise_adclicks
(
SELECT 
  hb_customer_id,
  hb_creative_id,
  domain,
  SUM(adclicks) adclicks 
FROM 
  handling_null_adclicks 
GROUP BY 1,2,3
)

--SELECT sum(adclicks) FROM dimension_wise_adclicks



--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  handling_null_adclicks a
  LEFT JOIN dimension_wise_adclicks b  
  ON b.hb_customer_id = a.hb_customer_id
  AND b.hb_creative_id = a.hb_creative_id
  AND b.domain = a.domain
  
)
--SELECT *
--        FROM adding_custwise_adclicks
--        LIMIT 10

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data




--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.cm_customer_id
  	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
  	,b.hb_customer_name
	,COALESCE(a.domain,b.domain) as domain
	,a.cm_creative_id
	,COALESCE(a.hb_creative_id,b.hb_creative_id) as hb_creative_id
  	,b.hb_creative_name
  	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external
	,a.cm_customer_fullname
	,a.cm_creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN misc.vogon_apr_22_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain  	
)



--select * FROM joining_hb_tac_data_with_meta_data
--LIMIT 2

--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN misc.vogon_apr_22_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
  		cm_customer_id
  		,cm_customer_fullname
		,hb_customer_id
  		,hb_customer_name
		,domain
		,cm_creative_id
  		,cm_creative_name
  		,hb_creative_id
  		,hb_creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query

--
--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query



Query 4:

--handling null adclicks from vogon_meta_data


with handling_null_adclicks(
SELECT	
  	cm_customer_id
	,domain
	,cm_creative_id
	,hb_customer_id
	,hb_creative_id
  	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost_final as  system_cost
	,advertiser_cost_final as advertiser_cost
	,conversion_payout_final as conversion_payout
	,advertiser_value_final as advertiser_value
	,audited_revenue_final as audited_revenue
	,advertiser_value_external
	,customer_fullname as cm_customer_fullname
	,creative_name as cm_creative_name
	
FROM
  	misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost_v1
)

--SELECT * FROM handling_null_adclicks
--LIMIT 2


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost) ,
-- 	   		SUM(advertiser_cost) ,
--    		SUM(conversion_payout), 
--    		SUM(advertiser_value) ,
--    		SUM(audited_revenue), 
--			sum(advertiser_value_external) 
--		from handling_null_adclicks






--SELECT * FROM misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
--LIMIT 2


----------------------------------------------------------------------------------------------------------



,dimension_wise_adclicks
(
SELECT 
  hb_customer_id,
  hb_creative_id,
  domain,
  SUM(adclicks) adclicks 
FROM 
  handling_null_adclicks 
GROUP BY 1,2,3
)

--SELECT sum(adclicks) FROM dimension_wise_adclicks



--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  handling_null_adclicks a
  LEFT JOIN dimension_wise_adclicks b  
  ON b.hb_customer_id = a.hb_customer_id
  AND b.hb_creative_id = a.hb_creative_id
  AND b.domain = a.domain
  
)
--SELECT *
--        FROM adding_custwise_adclicks
--        LIMIT 10

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data




--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.cm_customer_id
  	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
  	,b.hb_customer_name
	,COALESCE(a.domain,b.domain) as domain
	,a.cm_creative_id
	,COALESCE(a.hb_creative_id,b.hb_creative_id) as hb_creative_id
  	,b.hb_creative_name
  	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external
	,a.cm_customer_fullname
	,a.cm_creative_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN misc.vogon_apr_22_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain  	
)



--select * FROM joining_hb_tac_data_with_meta_data
--LIMIT 2

--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN misc.vogon_apr_22_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
  		cm_customer_id
  		,cm_customer_fullname
		,hb_customer_id
  		,hb_customer_name
		,domain
		,cm_creative_id
  		,cm_creative_name
  		,hb_creative_id
  		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query

--
--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query






Table stored : 
Final_data_april_22_with_hb_tac_external_adv_cost


Final_data_april_22_with_hb_tac_external_adv_cost_v1 - correct tac dist

With proper month wise tac : 
Final_data_april_22_with_hb_tac_external_adv_cost_v3



Query VERSION 3 OUTPUT : april_22_ybnca_demand_with_hb_tac_external_adv_cost


april_22_ybnca_demand_with_hb_tac_external_adv_cost_v1

For 2023 File

SUMMARY

1.Getting Data from Vogon for YBNCA
2.Getting Data From MAX
3.Cleaning domains in python 
4.Distributing Inter BT external advertiser cost for BT 3
5. Joining MAX and YBNCA vogon data
6. Distributing TAC from HB reports



1.Getting Data from Vogon for YBNCA

Query:

This is because some customers were in Arbitrage rather than YBNCA demand
select 
customer_id,
domain_name,
creative_id,
provider_group_id,
max_mkt,
max_partner_type, 
count(*) as adclicks,
sum(net_total_revenue) as net_total_revenue
from adclick
where ts between '2022040100' and '2022043023'
and customer_id IN ('8CU5RJ1PV',	'8CUN7S2PC',	'8CUWMI118',	'8CUU6IP82',	'8CU4O361K',	'8CUBQ50QO',	'8CU2F14C6',	'8CUM2PI55',	'8CU1WQ55F',	'8CUXP6AUQ',	'8CUG72UHU',	'8CU94FM32',	'8CUDF41E5',	'8CUCBP028',	'8CU65T3AT',	'8CU53284Y',	'8CU4171JQ',	'8CUIX8716',	'8CU3RXUW0',	'8CU81P3R7',	'8CUWMQE3H',	'8CUG548WD',	'8CU178IJL',	'8CU3HEJ2K',	'8CUQ5LJ63',	'8CU9Q74M4',	'8CUV8ML3S',	'8CU7O5VP2',	'8CUP4H3W6',	'8CULP3YQN',	'8CU93847Q',	'8CU64DMGW',	'8CUR746W0',	'8CUX1CQBH',	'8CUB4T860',	'8CUU26Z2M',	'8CUS7UNY8',	'8CUQT8U6U',	'8CUS47X5W',	'8CUZQP7LM',	'8CUAP6EAV',	'8CUSE9YI3',	'8CUJKX6Y3',	'8CUK2GD21',	'8CU1PLF6H',	'8CUQJV5RI',	'8CUM8Z8K6',	'8CUP6S26L',	'8CUT4OKFR',	'8CUI6FILU',	'8CU3VL6IT',	'8CU1VHFY1',	'8CU4P2DVS',	'8CU5H8BN8',	'8CUFH82F2',	'8CUEXS78H',	'8CU8ND892',	'8CU1AQFSQ',	'8CU3PXTSM',	'8CU62P57L',	'8CUODT3X1',	'8CU5BPU1N',	'8CUM9B2T4',	'8CUJ88Y7T',	'8CUV96EZ9',	'8CU6S1P10',	'8CU8M1K5Q',	'8CU5HO4YS',	'8CUMYV8E5',	'8CU10BY71',	'8CUT45X93',	'8CUOP71C6',	'8CUWFZQIA',	'8CU4JWBS7',	'8CUC52W5Z',	'8CU537PR5',	'8CUEFBGXD',	'8CU7HWCU5',	'8CU6O8H2I',	'8CU11Q2YE',	'8CUG2YC13',	'8CUVZNNSQ',	'8CUY8A14G',	'8CUNH9931',	'8CU4228XV',	'8CUZ97FOK',	'8CU5RIR4N',	'8CUQ5LDMC',	'8CUL7D4IC',	'8CU8V7RR1',	'8CU8E891J',	'8CUM9UIVO',	'8CUIPKDK2',	'8CU71351O',	'8CU2D7508',	'8CU4FCKBR',	'8CUP967L3',	'8CUMTQJ9K',	'8CUQU4XDV',	'8CUD83XHH',	'8CUW7O461',	'8CU1WP1QE',	'8CU524879',	'8CU6I65Y2',	'8CU4F53AF',	'8CUX8326C',	'8CU6F42V0',	'8CU3J73MR',	'8CUZ1IXN7',	'8CUW7N439',	'8CUY6F836',	'8CU6IH05N',	'8CU77E3RQ',	'8CUJ077YA',	'8CUP4292R',	'8CUXI53R1',	'8CUW7ANYT',	'8CU2DL1ZU',	'8CUEB4X2O',	'8CUPYY4YB',	'8CU16EX14',	'8CU7842Y4',	'8CUEA27X1',	'8CU54RJWV',	'8CU6R332J',	'8CUP2SL66',	'8CU2TVT31',	'8CURPH5LQ',	'8CU119M0Y',	'8CUNOYEI7',	'8CU5NI43I',	'8CUS86LIM',	'8CU3B0G4Y',	'8CUHC4XG3',	'8CU4XZW61',	'8CUGI2WH2',	'8CU148N1C',	'8CUPQV76X',	'8CU7FAK9R',	'8CUKLC2YL',	'8CU88W387',	'8CU2802E4',	'8CU81GHOQ',	'8CU9ETYEO',	'8CUVSM0M2',	'8CUTB109P',	'8CU6T5TK1',	'8CU17O663',	'8CURQY7JB',	'8CU42L9NI',	'8CU6N406F',	'8CUE0COQ1',	'8CUO93VI3',	'8CUQCBD94',	'8CUJ0P2FK',	'8CU231286',	'8CU75Q6EF',	'8CU2D0SFH',	'8CU2S1OVF',	'8CU8C99TC',	'8CUF2VP4M',	'8CU4NWR66',	'8CUX8PTS6',	'8CUNK6F3W',	'8CUVQ485G',	'8CUYT9A1U',	'8CU9YDG51',	'8CU5NHX53',	'8CUV8TI79',	'8CUYPJ17J',	'8CU3W6U34',	'8CU4C7W77',	'8CUZRQYX2',	'8CU3HLQQ8',	'8CULK68E5',	'8CU9T6PJ1',	'8CUBO6623',	'8CU166J74',	'8CUTHHI02',	'8CU35S6S8',	'8CU8D7LXY',	'8CU227GK5',	'8CUYW6X6S',	'8CUK96PL1',	'8CUP765MF',	'8CU1NA8RS',	'8CU42D0G6',	'8CU54EZ26',	'8CUAYJBD1',	'8CU7YXSCX',	'8CUM98PII',	'8CUQNE7C9',	'8CU445BSQ',	'8CU30419G',	'8CU57MZL9',	'8CUB2QZPF',	'8CUL25Q96',	'8CU5OA9BB',	'8CUBM7PS9',	'8CUWRWLVN',	'8CUB6BM1C',	'8CUS23II8',	'8CUQ33R4V',	'8CU2423U8',	'8CUVZN186',	'8CU50763W',	'8CUKNPB32',	'8CU182IQW',	'8CUSH2X3D',	'8CU2WOY7T',	'8CUS6UXIS',	'8CUG305TG',	'8CUD44L7E',	'8CU57255Z',	'8CUCF0I41',	'8CUD7XE27',	'8CU9SYDPW',	'8CUO0G425',	'8CU7FKFJ5',	'8CU3QVIY3',	'8CU243NR0',	'8CUT12E58',	'8CUP8MCN2',	'8CUPZRNGC',	'8CUKJ2T53',	'8CU31Q9C3',	'8CUIHXRCB',	'8CU84XVQ8',	'8CU51JJ6H',	'8CU7VGBS3',	'8CUP23WR7',	'8CUMPWGC4',	'8CUA9PA32',	'8CU77WCFU',	'8CU18B4NQ',	'8CUHP6A7G',	'8CU3FIF3U',	'8CU6EYVG2',	'8CU24OHNI',	'8CU2820C3',	'8CUF1OPX6',	'8CU91FWT4',	'8CUR6485G',	'8CUL75VT5',	'8CU4863Y1',	'8CUMGKIH7',	'8CU48256H',	'8CU89P1B2',	'8CUT17N89',	'8CU1505N7',	'8CUSL6ZG8',	'8CURVUW85',	'8CULO0ZW6',	'8CUV4EW5L',	'8CU3LF0L6',	'8CUR44F8I',	'8CU88PL31',	'8CU7IQYDP',	'8CU34GM3B',	'8CUM91JKH',	'8CUK6W0TJ',	'8CUXO07WH',	'8CU93S536',	'8CUT3KG4Y',	'8CU697NX8',	'8CUH2N5CE',	'8CU7Q2YSD',	'8CUPDVF0I',	'8CUUC7H2O',	'8CUUQ2YQI',	'8CU7U336X',	'8CUG37H35',	'8CUT0808N',	'8CU1H9730',	'8CUU550B8',	'8CULXDJ5I',	'8CU3XC7U4',	'8CUNXD177',	'8CUB6E4M5',	'8CU450BVR',	'8CU386Y6Y',	'8CU1H672G',	'8CU4B1S35',	'8CU4A6MMD',	'8CUD844J5',	'8CUOLF18F',	'8CU8WM007',	'8CU5IA67J',	'8CUM3O80K',	'8CU27488H',	'8CU40411F',	'8CU2SI52O',	'8CU28LO69',	'8CU1Z7OH0',	'8CU8K2P54',	'8CUG95H5Y',	'8CUH810F8',	'8CU2M20VF',	'8CUB9E4X4',	'8CU527E74',	'8CUHHG235',	'8CU2RRS6C',	'8CUPBNRC8',	'8CU7DV2WK',	'8CU46GP30',	'8CUR4F6MT',	'8CULEHCI1',	'8CUOBJI3C',	'8CU6Q3X71',	'8CU5W2U2C',	'8CUFF1N6I',	'8CU209O93',	'8CUI77D8Z',	'8CU1PB5XI',	'8CUPCH47K',	'8CUW7ZYP1',	'8CUGM51N1',	'8CU2X1IYE',	'8CUVQ518B',	'8CU4WD3OB',	'8CUCR6TW0',	'8CUISGL42',	'8CUSZSMLB',	'8CUK3Q46U',	'8CU4OI4JC',	'8CU3OEZUL',	'8CUAX165J',	'8CUN4W5ZP',	'8CUWEGF93',	'8CU2Y7985',	'8CU5J9ISQ',	'8CUDQ162T',	'8CU12P65Y',	'8CUKVGTM2',	'8CUQMM1HZ',	'8CU3S37EE',	'8CU3J9JQ0',	'8CU353K26',	'8CUS2VTU4',	'8CUN43P17',	'8CU9VOE6X',	'8CUOZ6S96',	'8CU4J217P',	'8CUK8EGA2',	'8CUL8Z4P3',	'8CU59Q3M6',	'8CUM3DRTE',	'8CU5Q5N6T',	'8CU8N1K53',	'8CU9634K2',	'8CU6YQ8QW',	'8CUO6737O',	'8CU1WW14N',	'8CUHM57PV',	'8CU7P5QV7',	'8CU85X3WX',	'8CUH68205',	'8CUOFY45K',	'8CUT6DL77',	'8CU52AGZN',	'8CUI7X87X',	'8CU4GOX81',	'8CUWN35A3',	'8CU3IPZW3',	'8CUJZ70FF',	'8CU5AEU31',	'8CUL2CW6V',	'8CU38O9VS',	'8CUDH1471',	'8CUME14FO',	'8CU1Z1C6I',	'8CUCZ0207',	'8CU2IJF65',	'8CU7TZ03C',	'8CUS2UAWR',	'8CU6USI7B',	'8CUDD460N',	'8CUK4843W',	'8CU75LJTS',	'8CUDVP96V',	'8CUX1826C',	'8CUV57Q5O',	'8CU1NI247',	'8CUK50055',	'8CU61P39K',	'8CUPJ5W6N',	'8CUJ3S7KV',	'8CURKID23',	'8CUY82DKD',	'8CUWOI9AW',	'8CUK617C1',	'8CUOKJ1BR',	'8CUI77351',	'8CUSB3Y76',	'8CUJ5I9ED',	'8CUD609M7',	'8CUDK2QZ2',	'8CUS1511B',	'8CUT5RW37',	'8CUT1Z653',	'8CUPO7228',	'8CUMEUXKO',	'8CUC40978',	'8CUK548M6',	'8CUM0528M',	'8CURAETX0',	'8CUFPROJJ',	'8CULYVX3M',	'8CUMI65P1',	'8CUWSO897',	'8CUU4524S',	'8CUKJHRB8',	'8CUN8XXW8',	'8CUHX5111',	'8CUON31VM',	'8CUF2Y1CF',	'8CUL44KU2',	'8CUYO62Y3',	'8CUUEL527',	'8CUD962R4',	'8CUQ144Y4',	'8CUW61QVH',	'8CUUVI68N',	'8CUES8DO5',	'8CUV28G2H',	'8CUHUGQ2G',	'8CUS55DOY',	'8CUDY4XD4',	'8CUCT2T57',	'8CUNZF441',	'8CUHBGL74',	'8CUQW327W',	'8CUPS2JN0',	'8CURNKI44',	'8CUV66V63',	'8CUWZD13V',	'8CUJNHT3B',	'8CUN47X56',	'8CUJZ5675',	'8CURO28R9',	'8CUF596DY',	'8CUXE1247',	'8CUXMRPI4',	'8CUJ2X682',	'8CUEY7YF5',	'8CUXV3MQ6',	'8CUD56M15',	'8CUXRIFQ2',	'8CUEIT71Q',	'8CUY4G4IH',	'8CUVFWDX4',	'8CURQ7UVW',	'8CUDVH64B',	'8CUCZ3CY5',	'8CUIB76OI',	'8CUNLW3P4',	'8CUVRH21J',	'8CUFCVF6V',	'8CUYYDE35',	'8CUM524GX',	'8CUQ8HO5F',	'8CUD851O8',	'8CUTH126L',	'8CUGJOY67',	'8CUT0318V',	'8CU5416B4',	'8CU75RTGG',	'8CU8L54HV',	'8CU5L27L3',	'8CU3JVG7R',	'8CU6REV8D',	'8CU8G48XU',	'8CU7GFI3Y',	'8CU2WC9LS',	'8CU34O54T',	'8CU623C3G',	'8CU279YD6',	'8CU22CE5X',	'8CU7KK5P5',	'8CU5N4Q4R',	'8CU59218C',	'8CU8J6JVY',	'8CU6RFN10',	'8CU7DC3D1',	'8CU7OLT19',	'8CU8QQV6W',	'8CU2V6JT6',	'8CU5IY74U',	'8CU7PY4G6',	'8CU2J6232',	'8CU27F565',	'8CU5HS8U2',	'8CU5LP2D4',	'8CU63145G',	'8CU5QT4X6',	'8CU1UW419',	'8CU7U4TR3',	'8CU30D803',	'8CU41FB8S',	'8CU3H8Z5L',	'8CU2V81K2',	'8CU1KO2N2',	'8CUA7B38H',	'8CU4785FS',	'8CU578MFO',	'8CU8MG4DT',	'8CU3PZ1I2',	'8CU67DBU0',	'8CU653PFY',	'8CU8SW59F',	'8CU2W8643',	'8CU314Z59',	'8CU65N707',	'8CU1VL578',	'8CU679RLM',	'8CU2I33OG',	'8CU1CVXP5',	'8CU1D26BF',	'8CU852X9R',	'8CU955JVX',	'8CU97SKQ4',	'8CU971W16',	'8CU3L24A1',	'8CU55M334',	'8CU2P562G',	'8CU1EFKI2',	'8CU87WF1D',	'8CU485LIE',	'8CU4LG626',	'8CU31NPKK',	'8CU6MQ4O2',	'8CUA58SJG',	'8CU7WFNN3',	'8CU4MH8RR',	'8CU5B62A1',	'8CUAG9JI3',	'8CU8142K0',	'8CU3QQ658',	'8CU36UKDE',	'8CU221YRQ',	'8CU3725X1',	'8CUB36983',	'8CU52TUNL',	'8CU584923',	'8CU849PMO',	'8CU16NKTZ',	'8CU38GM41',	'8CU42WNED',	'8CU4NNHCD',	'8CUST953J',	'8CU90V4LT',	'8CUM1Z2G8',	'8CUT4P08X',	'8CU311358',	'8CUPKE5RY',	'8CU6P9DG4',	'8CUR646E7',	'8CUN78Y41',	'8CU2549D3',	'8CUWMF98U',	'8CU494343',	'8CU5V65PX',	'8CUN8U1LX',	'8CU5KN78A',	'8CU54DJ4I',	'8CU8M5P7B',	'8CU9E838F',	'8CUQ87O80',	'8CU6RHBA3',	'8CU48068A',	'8CU785VIL',	'8CU939XD4',	'8CUP97C63',	'8CUC92VX6',	'8CUV30G42',	'8CULJ2L8Q',	'8CU8GI08N',	'8CU2Q4O6F',	'8CU84X179',	'8CUH6CR83',	'8CUJEM1AO',	'8CU7E4505',	'8CU4V40B1',	'8CUM8C151',	'8CU29N1R8',	'8CUV41OAH',	'8CU2C84BU',	'8CUL26IV2',	'8CUIOZQNV',	'8CU910636',	'8CUJN5H60',	'8CUOXGR19',	'8CUSYGGG2',	'8CUQOL6MF',	'8CUQQSH57',	'8CUL2446F',	'8CUM545EY',	'8CUABW64L',	'8CUJ2LRCU',	'8CU1QU6B2',	'8CU585TW4',	'8CU7KV0YC',	'8CUKWA788',	'8CUHN3BGE',	'8CUAU4D25',	'8CUX3I553',	'8CUY5V96Y',	'8CU72I3GT',	'8CU2ZBW87',	'8CUK5QD75',	'8CU62MU8E',	'8CUS3H6GJ',	'8CU12LGKP',	'8CUA525XP',	'8CU5V586L',	'8CU48T46H',	'8CUV87737',	'8CUXE280U',	'8CU598R9K',	'8CUVFT2XG',	'8CU5217S8',	'8CU117ALB',	'8CUF4MSM6',	'8CU81SHO3',	'8CUM3B8J1',	'8CUS3E7WK',	'8CU54N5CK'
)
and audit_spam_flag = 0
group by 1,2,3,4,5,6


Query 2 : 
select 
customer_id as cm_customer_id,
hb_audit_1 as hb_customer_id,
hb_audit_2 as hb_creative_id,
domain_name,
creative_id,
provider_group_id,
max_mkt,
max_partner_type, 
count(*) as adclicks,
sum(net_total_revenue) as net_total_revenue
from adclick
where ts between '2022040100' and '2022043023'
and customer_id IN ('8CU5RJ1PV',	'8CUN7S2PC',	'8CUWMI118',	'8CUU6IP82',	'8CU4O361K',	'8CUBQ50QO',	'8CU2F14C6',	'8CUM2PI55',	'8CU1WQ55F',	'8CUXP6AUQ',	'8CUG72UHU',	'8CU94FM32',	'8CUDF41E5',	'8CUCBP028',	'8CU65T3AT',	'8CU53284Y',	'8CU4171JQ',	'8CUIX8716',	'8CU3RXUW0',	'8CU81P3R7',	'8CUWMQE3H',	'8CUG548WD',	'8CU178IJL',	'8CU3HEJ2K',	'8CUQ5LJ63',	'8CU9Q74M4',	'8CUV8ML3S',	'8CU7O5VP2',	'8CUP4H3W6',	'8CULP3YQN',	'8CU93847Q',	'8CU64DMGW',	'8CUR746W0',	'8CUX1CQBH',	'8CUB4T860',	'8CUU26Z2M',	'8CUS7UNY8',	'8CUQT8U6U',	'8CUS47X5W',	'8CUZQP7LM',	'8CUAP6EAV',	'8CUSE9YI3',	'8CUJKX6Y3',	'8CUK2GD21',	'8CU1PLF6H',	'8CUQJV5RI',	'8CUM8Z8K6',	'8CUP6S26L',	'8CUT4OKFR',	'8CUI6FILU',	'8CU3VL6IT',	'8CU1VHFY1',	'8CU4P2DVS',	'8CU5H8BN8',	'8CUFH82F2',	'8CUEXS78H',	'8CU8ND892',	'8CU1AQFSQ',	'8CU3PXTSM',	'8CU62P57L',	'8CUODT3X1',	'8CU5BPU1N',	'8CUM9B2T4',	'8CUJ88Y7T',	'8CUV96EZ9',	'8CU6S1P10',	'8CU8M1K5Q',	'8CU5HO4YS',	'8CUMYV8E5',	'8CU10BY71',	'8CUT45X93',	'8CUOP71C6',	'8CUWFZQIA',	'8CU4JWBS7',	'8CUC52W5Z',	'8CU537PR5',	'8CUEFBGXD',	'8CU7HWCU5',	'8CU6O8H2I',	'8CU11Q2YE',	'8CUG2YC13',	'8CUVZNNSQ',	'8CUY8A14G',	'8CUNH9931',	'8CU4228XV',	'8CUZ97FOK',	'8CU5RIR4N',	'8CUQ5LDMC',	'8CUL7D4IC',	'8CU8V7RR1',	'8CU8E891J',	'8CUM9UIVO',	'8CUIPKDK2',	'8CU71351O',	'8CU2D7508',	'8CU4FCKBR',	'8CUP967L3',	'8CUMTQJ9K',	'8CUQU4XDV',	'8CUD83XHH',	'8CUW7O461',	'8CU1WP1QE',	'8CU524879',	'8CU6I65Y2',	'8CU4F53AF',	'8CUX8326C',	'8CU6F42V0',	'8CU3J73MR',	'8CUZ1IXN7',	'8CUW7N439',	'8CUY6F836',	'8CU6IH05N',	'8CU77E3RQ',	'8CUJ077YA',	'8CUP4292R',	'8CUXI53R1',	'8CUW7ANYT',	'8CU2DL1ZU',	'8CUEB4X2O',	'8CUPYY4YB',	'8CU16EX14',	'8CU7842Y4',	'8CUEA27X1',	'8CU54RJWV',	'8CU6R332J',	'8CUP2SL66',	'8CU2TVT31',	'8CURPH5LQ',	'8CU119M0Y',	'8CUNOYEI7',	'8CU5NI43I',	'8CUS86LIM',	'8CU3B0G4Y',	'8CUHC4XG3',	'8CU4XZW61',	'8CUGI2WH2',	'8CU148N1C',	'8CUPQV76X',	'8CU7FAK9R',	'8CUKLC2YL',	'8CU88W387',	'8CU2802E4',	'8CU81GHOQ',	'8CU9ETYEO',	'8CUVSM0M2',	'8CUTB109P',	'8CU6T5TK1',	'8CU17O663',	'8CURQY7JB',	'8CU42L9NI',	'8CU6N406F',	'8CUE0COQ1',	'8CUO93VI3',	'8CUQCBD94',	'8CUJ0P2FK',	'8CU231286',	'8CU75Q6EF',	'8CU2D0SFH',	'8CU2S1OVF',	'8CU8C99TC',	'8CUF2VP4M',	'8CU4NWR66',	'8CUX8PTS6',	'8CUNK6F3W',	'8CUVQ485G',	'8CUYT9A1U',	'8CU9YDG51',	'8CU5NHX53',	'8CUV8TI79',	'8CUYPJ17J',	'8CU3W6U34',	'8CU4C7W77',	'8CUZRQYX2',	'8CU3HLQQ8',	'8CULK68E5',	'8CU9T6PJ1',	'8CUBO6623',	'8CU166J74',	'8CUTHHI02',	'8CU35S6S8',	'8CU8D7LXY',	'8CU227GK5',	'8CUYW6X6S',	'8CUK96PL1',	'8CUP765MF',	'8CU1NA8RS',	'8CU42D0G6',	'8CU54EZ26',	'8CUAYJBD1',	'8CU7YXSCX',	'8CUM98PII',	'8CUQNE7C9',	'8CU445BSQ',	'8CU30419G',	'8CU57MZL9',	'8CUB2QZPF',	'8CUL25Q96',	'8CU5OA9BB',	'8CUBM7PS9',	'8CUWRWLVN',	'8CUB6BM1C',	'8CUS23II8',	'8CUQ33R4V',	'8CU2423U8',	'8CUVZN186',	'8CU50763W',	'8CUKNPB32',	'8CU182IQW',	'8CUSH2X3D',	'8CU2WOY7T',	'8CUS6UXIS',	'8CUG305TG',	'8CUD44L7E',	'8CU57255Z',	'8CUCF0I41',	'8CUD7XE27',	'8CU9SYDPW',	'8CUO0G425',	'8CU7FKFJ5',	'8CU3QVIY3',	'8CU243NR0',	'8CUT12E58',	'8CUP8MCN2',	'8CUPZRNGC',	'8CUKJ2T53',	'8CU31Q9C3',	'8CUIHXRCB',	'8CU84XVQ8',	'8CU51JJ6H',	'8CU7VGBS3',	'8CUP23WR7',	'8CUMPWGC4',	'8CUA9PA32',	'8CU77WCFU',	'8CU18B4NQ',	'8CUHP6A7G',	'8CU3FIF3U',	'8CU6EYVG2',	'8CU24OHNI',	'8CU2820C3',	'8CUF1OPX6',	'8CU91FWT4',	'8CUR6485G',	'8CUL75VT5',	'8CU4863Y1',	'8CUMGKIH7',	'8CU48256H',	'8CU89P1B2',	'8CUT17N89',	'8CU1505N7',	'8CUSL6ZG8',	'8CURVUW85',	'8CULO0ZW6',	'8CUV4EW5L',	'8CU3LF0L6',	'8CUR44F8I',	'8CU88PL31',	'8CU7IQYDP',	'8CU34GM3B',	'8CUM91JKH',	'8CUK6W0TJ',	'8CUXO07WH',	'8CU93S536',	'8CUT3KG4Y',	'8CU697NX8',	'8CUH2N5CE',	'8CU7Q2YSD',	'8CUPDVF0I',	'8CUUC7H2O',	'8CUUQ2YQI',	'8CU7U336X',	'8CUG37H35',	'8CUT0808N',	'8CU1H9730',	'8CUU550B8',	'8CULXDJ5I',	'8CU3XC7U4',	'8CUNXD177',	'8CUB6E4M5',	'8CU450BVR',	'8CU386Y6Y',	'8CU1H672G',	'8CU4B1S35',	'8CU4A6MMD',	'8CUD844J5',	'8CUOLF18F',	'8CU8WM007',	'8CU5IA67J',	'8CUM3O80K',	'8CU27488H',	'8CU40411F',	'8CU2SI52O',	'8CU28LO69',	'8CU1Z7OH0',	'8CU8K2P54',	'8CUG95H5Y',	'8CUH810F8',	'8CU2M20VF',	'8CUB9E4X4',	'8CU527E74',	'8CUHHG235',	'8CU2RRS6C',	'8CUPBNRC8',	'8CU7DV2WK',	'8CU46GP30',	'8CUR4F6MT',	'8CULEHCI1',	'8CUOBJI3C',	'8CU6Q3X71',	'8CU5W2U2C',	'8CUFF1N6I',	'8CU209O93',	'8CUI77D8Z',	'8CU1PB5XI',	'8CUPCH47K',	'8CUW7ZYP1',	'8CUGM51N1',	'8CU2X1IYE',	'8CUVQ518B',	'8CU4WD3OB',	'8CUCR6TW0',	'8CUISGL42',	'8CUSZSMLB',	'8CUK3Q46U',	'8CU4OI4JC',	'8CU3OEZUL',	'8CUAX165J',	'8CUN4W5ZP',	'8CUWEGF93',	'8CU2Y7985',	'8CU5J9ISQ',	'8CUDQ162T',	'8CU12P65Y',	'8CUKVGTM2',	'8CUQMM1HZ',	'8CU3S37EE',	'8CU3J9JQ0',	'8CU353K26',	'8CUS2VTU4',	'8CUN43P17',	'8CU9VOE6X',	'8CUOZ6S96',	'8CU4J217P',	'8CUK8EGA2',	'8CUL8Z4P3',	'8CU59Q3M6',	'8CUM3DRTE',	'8CU5Q5N6T',	'8CU8N1K53',	'8CU9634K2',	'8CU6YQ8QW',	'8CUO6737O',	'8CU1WW14N',	'8CUHM57PV',	'8CU7P5QV7',	'8CU85X3WX',	'8CUH68205',	'8CUOFY45K',	'8CUT6DL77',	'8CU52AGZN',	'8CUI7X87X',	'8CU4GOX81',	'8CUWN35A3',	'8CU3IPZW3',	'8CUJZ70FF',	'8CU5AEU31',	'8CUL2CW6V',	'8CU38O9VS',	'8CUDH1471',	'8CUME14FO',	'8CU1Z1C6I',	'8CUCZ0207',	'8CU2IJF65',	'8CU7TZ03C',	'8CUS2UAWR',	'8CU6USI7B',	'8CUDD460N',	'8CUK4843W',	'8CU75LJTS',	'8CUDVP96V',	'8CUX1826C',	'8CUV57Q5O',	'8CU1NI247',	'8CUK50055',	'8CU61P39K',	'8CUPJ5W6N',	'8CUJ3S7KV',	'8CURKID23',	'8CUY82DKD',	'8CUWOI9AW',	'8CUK617C1',	'8CUOKJ1BR',	'8CUI77351',	'8CUSB3Y76',	'8CUJ5I9ED',	'8CUD609M7',	'8CUDK2QZ2',	'8CUS1511B',	'8CUT5RW37',	'8CUT1Z653',	'8CUPO7228',	'8CUMEUXKO',	'8CUC40978',	'8CUK548M6',	'8CUM0528M',	'8CURAETX0',	'8CUFPROJJ',	'8CULYVX3M',	'8CUMI65P1',	'8CUWSO897',	'8CUU4524S',	'8CUKJHRB8',	'8CUN8XXW8',	'8CUHX5111',	'8CUON31VM',	'8CUF2Y1CF',	'8CUL44KU2',	'8CUYO62Y3',	'8CUUEL527',	'8CUD962R4',	'8CUQ144Y4',	'8CUW61QVH',	'8CUUVI68N',	'8CUES8DO5',	'8CUV28G2H',	'8CUHUGQ2G',	'8CUS55DOY',	'8CUDY4XD4',	'8CUCT2T57',	'8CUNZF441',	'8CUHBGL74',	'8CUQW327W',	'8CUPS2JN0',	'8CURNKI44',	'8CUV66V63',	'8CUWZD13V',	'8CUJNHT3B',	'8CUN47X56',	'8CUJZ5675',	'8CURO28R9',	'8CUF596DY',	'8CUXE1247',	'8CUXMRPI4',	'8CUJ2X682',	'8CUEY7YF5',	'8CUXV3MQ6',	'8CUD56M15',	'8CUXRIFQ2',	'8CUEIT71Q',	'8CUY4G4IH',	'8CUVFWDX4',	'8CURQ7UVW',	'8CUDVH64B',	'8CUCZ3CY5',	'8CUIB76OI',	'8CUNLW3P4',	'8CUVRH21J',	'8CUFCVF6V',	'8CUYYDE35',	'8CUM524GX',	'8CUQ8HO5F',	'8CUD851O8',	'8CUTH126L',	'8CUGJOY67',	'8CUT0318V',	'8CU5416B4',	'8CU75RTGG',	'8CU8L54HV',	'8CU5L27L3',	'8CU3JVG7R',	'8CU6REV8D',	'8CU8G48XU',	'8CU7GFI3Y',	'8CU2WC9LS',	'8CU34O54T',	'8CU623C3G',	'8CU279YD6',	'8CU22CE5X',	'8CU7KK5P5',	'8CU5N4Q4R',	'8CU59218C',	'8CU8J6JVY',	'8CU6RFN10',	'8CU7DC3D1',	'8CU7OLT19',	'8CU8QQV6W',	'8CU2V6JT6',	'8CU5IY74U',	'8CU7PY4G6',	'8CU2J6232',	'8CU27F565',	'8CU5HS8U2',	'8CU5LP2D4',	'8CU63145G',	'8CU5QT4X6',	'8CU1UW419',	'8CU7U4TR3',	'8CU30D803',	'8CU41FB8S',	'8CU3H8Z5L',	'8CU2V81K2',	'8CU1KO2N2',	'8CUA7B38H',	'8CU4785FS',	'8CU578MFO',	'8CU8MG4DT',	'8CU3PZ1I2',	'8CU67DBU0',	'8CU653PFY',	'8CU8SW59F',	'8CU2W8643',	'8CU314Z59',	'8CU65N707',	'8CU1VL578',	'8CU679RLM',	'8CU2I33OG',	'8CU1CVXP5',	'8CU1D26BF',	'8CU852X9R',	'8CU955JVX',	'8CU97SKQ4',	'8CU971W16',	'8CU3L24A1',	'8CU55M334',	'8CU2P562G',	'8CU1EFKI2',	'8CU87WF1D',	'8CU485LIE',	'8CU4LG626',	'8CU31NPKK',	'8CU6MQ4O2',	'8CUA58SJG',	'8CU7WFNN3',	'8CU4MH8RR',	'8CU5B62A1',	'8CUAG9JI3',	'8CU8142K0',	'8CU3QQ658',	'8CU36UKDE',	'8CU221YRQ',	'8CU3725X1',	'8CUB36983',	'8CU52TUNL',	'8CU584923',	'8CU849PMO',	'8CU16NKTZ',	'8CU38GM41',	'8CU42WNED',	'8CU4NNHCD',	'8CUST953J',	'8CU90V4LT',	'8CUM1Z2G8',	'8CUT4P08X',	'8CU311358',	'8CUPKE5RY',	'8CU6P9DG4',	'8CUR646E7',	'8CUN78Y41',	'8CU2549D3',	'8CUWMF98U',	'8CU494343',	'8CU5V65PX',	'8CUN8U1LX',	'8CU5KN78A',	'8CU54DJ4I',	'8CU8M5P7B',	'8CU9E838F',	'8CUQ87O80',	'8CU6RHBA3',	'8CU48068A',	'8CU785VIL',	'8CU939XD4',	'8CUP97C63',	'8CUC92VX6',	'8CUV30G42',	'8CULJ2L8Q',	'8CU8GI08N',	'8CU2Q4O6F',	'8CU84X179',	'8CUH6CR83',	'8CUJEM1AO',	'8CU7E4505',	'8CU4V40B1',	'8CUM8C151',	'8CU29N1R8',	'8CUV41OAH',	'8CU2C84BU',	'8CUL26IV2',	'8CUIOZQNV',	'8CU910636',	'8CUJN5H60',	'8CUOXGR19',	'8CUSYGGG2',	'8CUQOL6MF',	'8CUQQSH57',	'8CUL2446F',	'8CUM545EY',	'8CUABW64L',	'8CUJ2LRCU',	'8CU1QU6B2',	'8CU585TW4',	'8CU7KV0YC',	'8CUKWA788',	'8CUHN3BGE',	'8CUAU4D25',	'8CUX3I553',	'8CUY5V96Y',	'8CU72I3GT',	'8CU2ZBW87',	'8CUK5QD75',	'8CU62MU8E',	'8CUS3H6GJ',	'8CU12LGKP',	'8CUA525XP',	'8CU5V586L',	'8CU48T46H',	'8CUV87737',	'8CUXE280U',	'8CU598R9K',	'8CUVFT2XG',	'8CU5217S8',	'8CU117ALB',	'8CUF4MSM6',	'8CU81SHO3',	'8CUM3B8J1',	'8CUS3E7WK',	'8CU54N5CK'
)
and audit_spam_flag = 0
group by 1,2,3,4,5,6,7,8

QUERY v3
  select 
  customer_id as cm_customer_id,
  hb_audit_1 as hb_customer_id,
  hb_audit_2 as hb_creative_id,
  domain_name,
  creative_id,
  provider_group_id,
  max_mkt,
  max_partner_type, 
  count(*) as adclicks,
  sum(net_total_revenue) as net_total_revenue
  from adclick
  where ts between '2023040100' and '2023043023'
  and partner_id = '8PRVCXX19'
  and audit_spam_flag = 0
  group by 1,2,3,4,5,6,7,8


Tables stored :

1: SELECT * FROM misc.rozario_april_23_ybnca_demand_with_hbcustomer_hbadtag
rozario_april_23_ybnca_demand_with_hbcustomer_hbadtag_v2



3.Cleaning domains in python 








Table stored as : 
Max data after cleaning : misc.max_april_23_data_with_clean_domains

Vogon data after cleaning : april_23_ybnca_data_from_vogon



4. Uploading data to vogon
Clean domain files , tac files , max cost implementation,






5. Distributing Inter BT external advertiser cost for BT 3 max cost file has all partners

HERE SINCE WE DONT HAVE ADVERTISER EXTERNAL COST FOR APRIL 2023 we are making it 0 


QUERY:

--Query:
------------------
--check for total
--
--SELECT 
--	 DISTINCT Transaction_Month
--FROM 
--misc.max_april_23_data_with_clean_domains
--
-----------------
-- Filering max data with clean domains

WITH filtered_max_23
 (
 	select 
        	a.Month,
        	a.Transaction_Month,
        	a.publisher_id,
        	a.domain,
        	a.sub_sub_publisher_id as creative_id,
        	a.market_place_key,
        	a.market_place_name,
        	a.audit_channel,
        	a.parent_publisher_id,
        	a.sync_partner_id,
        	a.partner_id,
        	a.partner_name,
        	a.sync_partner_name,
        	a.traffic_source,
        	sum(a.system_cost) as system_cost,
        	sum(a.advertiser_cost) as advertiser_cost,
        	sum(a.conversion_payout) as conversion_payout,
        	sum(a.advertiser_value) as advertiser_value,
        	sum(a.audited_revenue) as audited_revenue
	from 
			misc.max_april_23_data_with_clean_domains  a
WHERE
			--a.transaction_month = 'April, 2023'
   			a.transaction_month = '01-04-23' AND
        	a.sync_partner_id = 1 

group by
			1,2,3,4,5,6,7,8,9,10,11,12,13,14
)   

--SELECT * FROM filtered_max_22

--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM 
--filtered_max_23
---------------------

--adding inter/intrabt flag

,imp_join 
 (
 	select 
        	a.Month,
        	a.Transaction_Month,
        	a.publisher_id,
        	a.domain,
        	a.creative_id,
        	a.market_place_key,
        	a.market_place_name,
        	a.audit_channel,
        	a.parent_publisher_id,
        	a.sync_partner_id,
        	a.partner_id,
        	a.partner_name,
        	a.sync_partner_name,
        	a.traffic_source,
   			b.partner_bt,
        	b.implementation_flag,
        	sum(a.system_cost) as system_cost,
        	sum(a.advertiser_cost) as advertiser_cost,
        	sum(a.conversion_payout) as conversion_payout,
        	sum(a.advertiser_value) as advertiser_value,
        	sum(a.audited_revenue) as audited_revenue
	from 
			filtered_max_23  a
LEFT JOIN
			misc.max_cost_mapping_april_2023 b
	ON 
			--b.max_partner_id = a.partner_id
   			b.partner_id = a.partner_id
	group by
			1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
 )
 
-- SELECT distinct partner_bt FROM imp_join
 
 --SELECT distinct implementation_flag FROM imp_join
 
--SELECT * FROM  
--misc.max_cost_mapping_april_2022 
--LIMIT 10
 
--SELECT 
--		sum(system_cost) as system_cost,
--       	sum(advertiser_cost) as advertiser_cost,
--       	sum(conversion_payout) as conversion_payout,
--       	sum(advertiser_value) as advertiser_value,
--       	sum(audited_revenue) as audited_revenue
--FROM imp_join

--SELECT * FROM imp_join
--LIMIT 10
--
-------------------
-- with and without Inter BT/Intra BT

--,april_22_not_inter
--(SELECT 
--  	*,
--  	0 as  advertiser_value_external
--  FROM 
--  	imp_join
-- 	WHERE --Transaction_Month = 'April, 2022' AND 
-- 	implementation_flag NOT IN ('Inter BT/Intra BT')
-- 	AND implementation_flag IS NULL
-- 	AND partner_bt NOT IN  ('BT-3')
-- 	AND partner_bt IS NULL
-- )
--SELECT * FROM april_22_not_inter
--LIMIT 10


--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM april_22_not_inter

--,april_23_w_adv_ext
-- (
-- 	SELECT *,
--  	CASE WHEN implementation_flag IN ('Inter BT/Intra BT') AND partner_bt IN ('BT-3') THEN 
--  	2692011.08   ---INSERT external advertiser cost here
--   	ELSE 0
--    END as  advertiser_value_external
--  	FROM 
--  	imp_join
-- 	--WHERE --Transaction_Month = 'April, 2022' AND
--   --implementation_flag IN ('Inter BT/Intra BT')
-- 	--AND partner_bt IN ('BT-3')
-- )

--SELECT 
--			sum(system_cost) as system_cost,
--        	sum(advertiser_cost) as advertiser_cost,
--        	sum(conversion_payout) as conversion_payout,
--        	sum(advertiser_value) as advertiser_value,
--        	sum(audited_revenue) as audited_revenue
--FROM april_22_w_adv_ext
 
 
--SELECT * FROM april_22_w_inter

--,distribution(
--  
--SELECT 
--  *,
--  advertiser_cost/(SELECT sum(advertiser_cost) FROM april_22_w_adv_ext WHERE implementation_flag IN ('Inter BT/Intra BT')
-- 	AND partner_bt IN ('BT-3'))   as advertiser_percent_dist,
--  (advertiser_cost/(SELECT sum(advertiser_cost) FROM april_22_w_adv_ext WHERE implementation_flag IN ('Inter BT/Intra BT')
-- 	AND partner_bt IN ('BT-3')))*advertiser_value_external as advertiser_value_external_dist
--   FROM april_22_w_adv_ext
--)

SELECT 
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,0 as advertiser_value_external_dist
FROM imp_join





--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from distribution 



TABLE STORED :

dump: misc.vogon_april_23_max_data_with_bt3_interbt_external_cost_dist



6. Filtering for Just YBNCA DEMAND and sync partner : 1

QUERY :

-- Redoing the max file part

WITH filtered_max_23
 (
SELECT 
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
FROM misc.vogon_april_23_max_data_with_bt3_interbt_external_cost_dist
WHERE
     parent_publisher_id = '8PRVCXX19'
)   
--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from filtered_max_23 


,updating_imp
(
  SELECT 
		*,
    	CASE WHEN partner_name= 'Perform Media Lead Gen partner' then 'Leadgen_Others'
    	else implementation_flag END as implementation_flag_v1
  FROM
  		filtered_max_23
 )

--------------------------------------

-- Filtering for only max data hence including others

,removing_others(

SELECT 
		*
FROM
		updating_imp
WHERE 
		implementation_flag_v1 <> 'Others'
)
------------------------------------
--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from removing_others 


-- correcting implementation flag so that join is possible

,corrections(

SELECT
	Month
	,Transaction_Month
	,publisher_id
	,domain
	,creative_id
	,lower(market_place_key) market_place_key
	,market_place_name
	,audit_channel
	,parent_publisher_id
	,sync_partner_id
	,partner_id
	,partner_name
	,sync_partner_name
	,traffic_source
	,partner_bt
	,implementation_flag
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,CASE WHEN implementation_flag_v1 = 'Inter BT/Intra BT' then 'Inter BT' ELSE implementation_flag_v1 END as implementation_flag_v2
FROM 
removing_others
)

SELECT * FROM corrections

--SELECT sum(advertiser_value_external_dist),
--sum(system_cost) as system_cost,
--sum(advertiser_cost) as advertiser_cost,
--sum(conversion_payout) as conversion_payout,
--sum(advertiser_value) as advertiser_value,
--sum(audited_revenue) as audited_revenue
--from corrections 

--SELECT 
--DISTINCT market_place_key
--FROM corrections



Table stored : 
misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_23


7. Joining MAX and YBNCA vogon data
Query:

--FULL OUTER JOIN between max darshil data and max vogon data



--adding max flag to darshils data
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_23
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

-- Checks

--	SELECT DISTINCT max_partner_type FROM max_filtered
        
--SELECT 
--		sum(advertiser_value_external_dist) advertiser_value_external_dist,
--		SUM(system_cost) as system_cost,
-- 	    SUM(advertiser_cost) advertiser_cost,
--  	SUM(conversion_payout) conversion_payout,
--  	SUM(advertiser_value) advertiser_value,
--  	SUM(audited_revenue) audited_revenue
--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.april_23_ybnca_data_from_vogon
)


-- Checks

--SELECT 
--SUM(adclicks) as adclicks
--,sum(net_total_revenue)
--FROM ybnca_data_from_vogon_with_max_flag


--SELECT * FROM ybnca_data_from_vogon_with_max_flag
--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			customer_id,
  			domain,
  			CAST (creative_id  as float) creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8
)


-- CHECKS


--SELECT sum(net_total_revenue)
--FROM max_data_in_analytics

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns

,filtered_max_vogon
(
  	SELECT 
  			customer_id,
  			domain,
  			creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7
)


-------------------------


--full oter join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT

				COALESCE(a.customer_id,b.customer_id)  customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.creative_id,b.creative_id)  creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue ,
  				b.advertiser_value_external_dist

	FROM
  				filtered_max_vogon a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)


-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_analytics



-------------------------------

-- filtering non max data from vogon

,non_max_data_in_vogon
(
  	SELECT 	 
  			customer_id,
  			domain,
  			creative_id,
  			provider_group_id,
  			max_mkt,
  			max_partner_type,
  			max_flag,
  			sum(adclicks) adclicks,
  			sum(net_total_revenue) net_total_revenue,
  			sum(0) AS system_cost,
      		sum(0) AS advertiser_cost,
      		sum(0) AS conversion_payout,
      		sum(0) AS advertiser_value,
      		sum(0) AS audited_revenue,
  			sum(0) AS advertiser_value_external_dist
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  GROUP BY 1,2,3,4,5,6,7
)

--CHECKS


--SELECT sum(tac_db_dist),	
--  			sum(adclicks),
--  			sum(net_total_revenue)
--     FROM non_max_data_in_analytics


-----------------------------



--UNION BETWEEN MAX AND NON MAX DATA


, final_union (
SELECT * FROM non_max_data_in_vogon
UNION 
SELECT * FROM joining_max_from_darshil_and_vogon 
)  


--CHECKS


--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from final_union


--------------------------------------------------


-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.customer_id=b.customer_id
)



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.creative_id= cast(b.creative_id as float)
  AND a.customer_id = b.customer_id
)


,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

    
select * from ad_provider_master

----------------------




QUERY version 2:

--adding max flag to darshils data , provider_group_id 12 
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_23
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

--SELECT customer_id,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_filtered
--GROUP BY 1     



--, max_filtered_removing_nulls(
--	SELECT  
--			customer_id ,
--  			domain,
--  			creative_id,
--  			max_mkt,
--  			max_partner_type,
--  			provider_group_id,
--  			max_flag,
--  			REPLACE(system_cost,'null',0) as system_cost,
--	 	    REPLACE(advertiser_cost,'null',0) advertiser_cost,
--      		REPLACE(conversion_payout,'null',0) conversion_payout,
--      		REPLACE(advertiser_value,'null',0) advertiser_value,
--      		REPLACE(audited_revenue,'null',0) audited_revenue,
--  			REPLACE(advertiser_value_external_dist,'null',0) advertiser_value_external_dist
--  	FROM
--			max_filtered
--  	)







-- CHECK FOR PARTNER TYPE
	--	SELECT DISTINCT max_partner_type FROM max_filtered


-- CHECK FOR OVERALL STATS
	--SELECT 
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
		--	SUM(system_cost) as system_cost,
	 	--    SUM(advertiser_cost) advertiser_cost,
	  	--SUM(conversion_payout) conversion_payout,
	  	--SUM(advertiser_value) advertiser_value,
	  	--SUM(audited_revenue) audited_revenue
	--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag to YBNCA data from vogon

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.vogon_rozario_april_23_ybnca_demand_with_hbcustomer_hbadtag
  
)


-- Checks for overall stats
	--SELECT 
	--SUM(adclicks) as adclicks
	--,sum(net_total_revenue)
	--FROM ybnca_data_from_vogon_with_max_flag

-- Checks for flags in NON_MAX
	--SELECT * FROM ybnca_data_from_vogon_with_max_flag
	--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data and adding 12 as provider group

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9,10
)

--SELECT * FROM data_filtered_for_max_in_vogon_ybnca_data

-- CHECKS


--SELECT sum(adclicks),sum(net_total_revenue)
--FROM data_filtered_for_max_in_vogon_ybnca_data

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns to take just the provider_group_id_v1 

,filtered_max_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain,
  			cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7,8,9
)


-------------------------
-- taking dimensionwise total adclicks

,dimension_wise_adclicks
(
SELECT 
  cm_customer_id,
  domain,
  provider_group_id_v1,
  cm_creative_id,
  max_mkt,
  max_partner_type,
  SUM(adclicks) total_dimension_adclicks 
FROM 
  filtered_max_vogon 
GROUP BY 1,2,3,4,5,6
)

--SELECT * FROM dimension_wise_adclicks
--LIMIT 100

--SELECT SUM(total_dimension_adclicks)  FROM dimension_wise_adclicks


--------------------------------

--adding the dimensionwise total clicks column

,adding_dimensionwise_adclicks
(
SELECT
  a.*,
  b.total_dimension_adclicks as total_dimension_adclicks
  FROM filtered_max_vogon a
  LEFT JOIN dimension_wise_adclicks b  
	ON	a.cm_customer_id=b.cm_customer_id
  	AND a.domain=b.domain
  	AND a.provider_group_id_v1=b.provider_group_id_v1
  	AND a.cm_creative_id=b.cm_creative_id
  	AND a.max_mkt=b.max_mkt
  	AND a.max_partner_type=b.max_partner_type
  		
)

--SELECT *  FROM dimension_wise_adclicks
--WHERE total_dimension_adclicks = 'null'

--SELECT * FROM adding_dimensionwise_adclicks




--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT
				
				COALESCE(a.cm_customer_id,b.customer_id)  cm_customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.cm_creative_id,b.creative_id)  cm_creative_id,
  				a.hb_customer_id,
  				a.hb_creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
  				a.total_dimension_adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue,
  				b.advertiser_value_external_dist

	FROM
  				adding_dimensionwise_adclicks a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)

--SELECT
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
	--	from joining_max_from_darshil_and_vogon
--GROUP BY 1      

--SELECT * FROM joining_max_from_darshil_and_vogon
--WHERE adclicks = 'null'

-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_vogon



-------------------------------
--MAX METRICS DISTRIBUTION

,max_metrics_distribution
( 
SELECT 
	cm_customer_id,
	domain,
	cm_creative_id,
	hb_customer_id,
	hb_creative_id,
	provider_group_id,
	max_mkt,
	max_partner_type,
	max_flag,
  	adclicks,
  	net_total_revenue,
	((adclicks)/(total_dimension_adclicks)) * system_cost as system_cost,
	((adclicks)/(total_dimension_adclicks)) * advertiser_cost  as  advertiser_cost ,
	((adclicks)/(total_dimension_adclicks)) * conversion_payout as  conversion_payout ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value as  advertiser_value ,
	((adclicks)/(total_dimension_adclicks)) * audited_revenue as  audited_revenue ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value_external_dist as  advertiser_value_external_final
FROM	 	
  joining_max_from_darshil_and_vogon
)





--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_metrics_distribution




,joining_with_max_filtered_for_nulls(
 	SELECT 
  	a.cm_customer_id,
	a.domain,
	a.cm_creative_id,
	a.hb_customer_id,
	a.hb_creative_id,
	a.provider_group_id,
	a.max_mkt,
	a.max_partner_type,
	a.max_flag,
	a.adclicks,
  	a.net_total_revenue,
	COALESCE(a.system_cost,b.system_cost) system_cost_final,
	COALESCE(a.advertiser_cost,b.advertiser_cost) advertiser_cost_final,
	COALESCE(a.conversion_payout,b.conversion_payout) conversion_payout_final,
	COALESCE(a.advertiser_value,b.advertiser_value) advertiser_value_final,
	COALESCE(a.audited_revenue,b.audited_revenue) audited_revenue_final,
	COALESCE(a.advertiser_value_external_final,b.advertiser_value_external_dist) advertiser_value_external
  FROM max_metrics_distribution a
  LEFT JOIN max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			
)

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from joining_with_max_filtered_for_nulls
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        




,non_max_data_in_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue,
  			0 as system_cost_final,	
	 		0 as advertiser_cost_final,
	 		0 as conversion_payout_final,
	 		0 as advertiser_value_final,
	 		0 as audited_revenue_final,
	 		0 as advertiser_value_external
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9
)
  
--UNION BETWEEN MAX AND NON MAX DATA


, final_union (
SELECT * FROM non_max_data_in_vogon
UNION 
SELECT * FROM joining_with_max_filtered_for_nulls 
)  
  
  

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from final_union
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        

-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.cm_customer_id=b.customer_id
)



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.cm_creative_id= cast(b.creative_id as float)
  AND a.cm_customer_id = b.customer_id
)


,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

    
select * from ad_provider_master


 
--Table stored : 
-- Misc.vogon_ybnca_2022_april_after_join_with_ext_adv_cost
--ybnca_2022_april_after_join_with_ext_adv_cost_max_dist
--
--ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost


Query :

#vogon-worker-gamma


--adding max flag to darshils data , provider_group_id 12 
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_22
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

--SELECT 
--DISTINCT max_mkt
--FROM
--max_filtered



--SELECT customer_id,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_filtered
--GROUP BY 1     



--, max_filtered_removing_nulls(
--	SELECT  
--			customer_id ,
--  			domain,
--  			creative_id,
--  			max_mkt,
--  			max_partner_type,
--  			provider_group_id,
--  			max_flag,
--  			REPLACE(system_cost,'null',0) as system_cost,
--	 	    REPLACE(advertiser_cost,'null',0) advertiser_cost,
--      		REPLACE(conversion_payout,'null',0) conversion_payout,
--      		REPLACE(advertiser_value,'null',0) advertiser_value,
--      		REPLACE(audited_revenue,'null',0) audited_revenue,
--  			REPLACE(advertiser_value_external_dist,'null',0) advertiser_value_external_dist
--  	FROM
--			max_filtered
--  	)







-- CHECK FOR PARTNER TYPE
	--	SELECT DISTINCT max_partner_type FROM max_filtered


-- CHECK FOR OVERALL STATS
	--SELECT 
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
		--	SUM(system_cost) as system_cost,
	 	--    SUM(advertiser_cost) advertiser_cost,
	  	--SUM(conversion_payout) conversion_payout,
	  	--SUM(advertiser_value) advertiser_value,
	  	--SUM(audited_revenue) audited_revenue
	--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag to YBNCA data from vogon

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.vogon_rozario_april_22_ybnca_demand_with_hbcustomer_hbadtag
  
)


-- Checks for overall stats
	--SELECT 
	--SUM(adclicks) as adclicks
	--,sum(net_total_revenue)
	--FROM ybnca_data_from_vogon_with_max_flag

-- Checks for flags in NON_MAX
	--SELECT * FROM ybnca_data_from_vogon_with_max_flag
	--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data and adding 12 as provider group

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9,10
)

--SELECT 
--DISTINCT max_mkt
--FROM
--data_filtered_for_max_in_vogon_ybnca_data


--SELECT * FROM data_filtered_for_max_in_vogon_ybnca_data

-- CHECKS


--SELECT sum(adclicks),sum(net_total_revenue)
--FROM data_filtered_for_max_in_vogon_ybnca_data

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns to take just the provider_group_id_v1 

,filtered_max_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain,
  			cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7,8,9
)


-------------------------
-- taking dimensionwise total adclicks

,dimension_wise_adclicks
(
SELECT 
  cm_customer_id,
  domain,
  provider_group_id_v1,
  cm_creative_id,
  max_mkt,
  max_partner_type,
  SUM(adclicks) total_dimension_adclicks 
FROM 
  filtered_max_vogon 
GROUP BY 1,2,3,4,5,6
)

--SELECT * FROM dimension_wise_adclicks
--LIMIT 100

--SELECT SUM(total_dimension_adclicks)  FROM dimension_wise_adclicks


--------------------------------

--adding the dimensionwise total clicks column

,adding_dimensionwise_adclicks
(
SELECT
  a.*,
  b.total_dimension_adclicks as total_dimension_adclicks
  FROM filtered_max_vogon a
  LEFT JOIN dimension_wise_adclicks b  
	ON	a.cm_customer_id=b.cm_customer_id
  	AND a.domain=b.domain
  	AND a.provider_group_id_v1=b.provider_group_id_v1
  	AND a.cm_creative_id=b.cm_creative_id
  	AND a.max_mkt=b.max_mkt
  	AND a.max_partner_type=b.max_partner_type
  		
)

--SELECT *  FROM dimension_wise_adclicks
--WHERE total_dimension_adclicks = 'null'

--SELECT * FROM adding_dimensionwise_adclicks




--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT
				
				COALESCE(a.cm_customer_id,b.customer_id)  cm_customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.cm_creative_id,b.creative_id)  cm_creative_id,
  				a.hb_customer_id,
  				a.hb_creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
  				a.total_dimension_adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue,
  				b.advertiser_value_external_dist

	FROM
  				adding_dimensionwise_adclicks a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)

--SELECT DISTINCT max_mkt FROM joining_max_from_darshil_and_vogon

--SELECT
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
	--	from joining_max_from_darshil_and_vogon
--GROUP BY 1      

--SELECT * FROM joining_max_from_darshil_and_vogon
--WHERE adclicks = 'null'

-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_vogon



-------------------------------
--MAX METRICS DISTRIBUTION

,max_metrics_distribution
( 
SELECT 
	cm_customer_id,
	domain,
	cm_creative_id,
	hb_customer_id,
	hb_creative_id,
	provider_group_id,
	max_mkt,
	max_partner_type,
	max_flag,
  	adclicks,
  	net_total_revenue,
	((adclicks)/(total_dimension_adclicks)) * system_cost as system_cost,
	((adclicks)/(total_dimension_adclicks)) * advertiser_cost  as  advertiser_cost ,
	((adclicks)/(total_dimension_adclicks)) * conversion_payout as  conversion_payout ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value as  advertiser_value ,
	((adclicks)/(total_dimension_adclicks)) * audited_revenue as  audited_revenue ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value_external_dist as  advertiser_value_external_final
FROM	 	
  joining_max_from_darshil_and_vogon
)

--select DISTINCT max_mkt FROM max_metrics_distribution



--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_metrics_distribution




,joining_with_max_filtered_for_nulls(
 	SELECT 
  	a.cm_customer_id,
	a.domain,
	a.cm_creative_id,
	a.hb_customer_id,
	a.hb_creative_id,
	a.provider_group_id,
	a.max_mkt,
	a.max_partner_type,
	a.max_flag,
	a.adclicks,
  	a.net_total_revenue,
	COALESCE(a.system_cost,b.system_cost) system_cost_final,
	COALESCE(a.advertiser_cost,b.advertiser_cost) advertiser_cost_final,
	COALESCE(a.conversion_payout,b.conversion_payout) conversion_payout_final,
	COALESCE(a.advertiser_value,b.advertiser_value) advertiser_value_final,
	COALESCE(a.audited_revenue,b.audited_revenue) audited_revenue_final,
	COALESCE(a.advertiser_value_external_final,b.advertiser_value_external_dist) advertiser_value_external
  FROM max_metrics_distribution a
  LEFT JOIN max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			
)

--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls


--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls



--SELECT DISTINCT max_mkt FROM joining_with_max_filtered_for_nulls

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from joining_with_max_filtered_for_nulls
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        




,non_max_data_in_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			provider_group_id,
  			max_mkt,
  			max_partner_type,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue,
  			0 as system_cost_final,	
	 		0 as advertiser_cost_final,
	 		0 as conversion_payout_final,
	 		0 as advertiser_value_final,
	 		0 as audited_revenue_final,
	 		0 as advertiser_value_external
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9
)


--UNION BETWEEN MAX AND NON MAX DATA


,final_union (
SELECT * FROM non_max_data_in_vogon
UNION ALL
SELECT * FROM joining_with_max_filtered_for_nulls 
)  

--SELECT DISTINCT max_mkt FROM final_union
  

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from final_union
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        

-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.cm_customer_id=b.customer_id
)
--SELECT * FROM customerm
--LIMIT 5



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.cm_creative_id= cast(b.creative_id as float)
  AND a.cm_customer_id = b.customer_id
)

SELECT * FROM creative_m
--LIMIT 5




,ad_provider_master(
SELECT a.*,b.`provider_group_name`
from  creative_m as a
left join cm.provider_group_master as b
on a.provider_group_id=b.provider_group_id
)

SELECT * FROM ad_provider_master

    
select * from ad_provider_master


QUERY v4:
--adding max flag to darshils data , provider_group_id 12 
with max_filtered as 
(
	SELECT  
			publisher_id as customer_id ,
  			domain,
  			CAST (creative_id  as float) AS creative_id,
  			lower(market_place_key) as max_mkt,
  			implementation_flag_v2	max_partner_type,
  			12 as provider_group_id,
  			'MAX' as max_flag,
  			SUM(system_cost) as system_cost,
	 	    SUM(advertiser_cost) advertiser_cost,
      		SUM(conversion_payout) conversion_payout,
      		SUM(advertiser_value) advertiser_value,
      		SUM(audited_revenue) audited_revenue,
  			sum(advertiser_value_external_dist) advertiser_value_external_dist
  	FROM
			misc.vogon_max_darshil_data_ybnca_demand_with_external_advertiser_cost_april_23
  	GROUP BY 
			1,2,3,4,5,6,7  						
  	
)

--SELECT customer_id,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_filtered
--GROUP BY 1     



--, max_filtered_removing_nulls(
--	SELECT  
--			customer_id ,
--  			domain,
--  			creative_id,
--  			max_mkt,
--  			max_partner_type,
--  			provider_group_id,
--  			max_flag,
--  			REPLACE(system_cost,'null',0) as system_cost,
--	 	    REPLACE(advertiser_cost,'null',0) advertiser_cost,
--      		REPLACE(conversion_payout,'null',0) conversion_payout,
--      		REPLACE(advertiser_value,'null',0) advertiser_value,
--      		REPLACE(audited_revenue,'null',0) audited_revenue,
--  			REPLACE(advertiser_value_external_dist,'null',0) advertiser_value_external_dist
--  	FROM
--			max_filtered
--  	)







-- CHECK FOR PARTNER TYPE
	--	SELECT DISTINCT max_partner_type FROM max_filtered


-- CHECK FOR OVERALL STATS
	--SELECT 
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
		--	SUM(system_cost) as system_cost,
	 	--    SUM(advertiser_cost) advertiser_cost,
	  	--SUM(conversion_payout) conversion_payout,
	  	--SUM(advertiser_value) advertiser_value,
	  	--SUM(audited_revenue) audited_revenue
	--FROM max_filtered

--SELECT * FROM max_filtered

--------------------------------


--Adding MAX & NON MAX flag to YBNCA data from vogon

,ybnca_data_from_vogon_with_max_flag

(
	select 
  			*,
			case when provider_group_id in (12,61) then 'MAX' else 'NON_MAX' end as max_flag
	from 
  			misc.vogon_rozario_april_23_ybnca_demand_with_hbcustomer_hbadtag
  
)


-- Checks for overall stats
	--SELECT 
	--SUM(adclicks) as adclicks
	--,sum(net_total_revenue)
	--FROM ybnca_data_from_vogon_with_max_flag

-- Checks for flags in NON_MAX
	--SELECT * FROM ybnca_data_from_vogon_with_max_flag
	--WHERE provider_group_id NOT IN (61,12)

----------------------------

-- Taking only max from vogon YBNCA data and adding 12 as provider group

,data_filtered_for_max_in_vogon_ybnca_data
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id,
  			12 as provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9,10
)

--SELECT * FROM data_filtered_for_max_in_vogon_ybnca_data

-- CHECKS


--SELECT sum(adclicks),sum(net_total_revenue)
--FROM data_filtered_for_max_in_vogon_ybnca_data

--SELECT * FROM max_data_in_analytics

--SELECT customer_id , sum(net_total_revenue) net_rev_vogon_max
--FROM max_data_in_analytics
--GROUP BY 1

------------------------

--rearranging columns to take just the provider_group_id_v1 

,filtered_max_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain,
  			cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			max_mkt,
  			max_partner_type,
  			provider_group_id_v1,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue
	FROM
		data_filtered_for_max_in_vogon_ybnca_data
  GROUP BY 1,2,3,4,5,6,7,8,9
)


-------------------------
-- taking dimensionwise total adclicks

,dimension_wise_adclicks
(
SELECT 
  cm_customer_id,
  domain,
  provider_group_id_v1,
  cm_creative_id,
  max_mkt,
  max_partner_type,
  SUM(adclicks) total_dimension_adclicks 
FROM 
  filtered_max_vogon 
GROUP BY 1,2,3,4,5,6
)

--SELECT * FROM dimension_wise_adclicks
--LIMIT 100

--SELECT SUM(total_dimension_adclicks)  FROM dimension_wise_adclicks


--------------------------------

--adding the dimensionwise total clicks column

,adding_dimensionwise_adclicks
(
SELECT
  a.*,
  b.total_dimension_adclicks as total_dimension_adclicks
  FROM filtered_max_vogon a
  LEFT JOIN dimension_wise_adclicks b  
	ON	a.cm_customer_id=b.cm_customer_id
  	AND a.domain=b.domain
  	AND a.provider_group_id_v1=b.provider_group_id_v1
  	AND a.cm_creative_id=b.cm_creative_id
  	AND a.max_mkt=b.max_mkt
  	AND a.max_partner_type=b.max_partner_type
  		
)

--SELECT *  FROM dimension_wise_adclicks
--WHERE total_dimension_adclicks = 'null'

--SELECT * FROM adding_dimensionwise_adclicks




--full outer join between darshils data and vogon data


,joining_max_from_darshil_and_vogon
(
	SELECT
				
				COALESCE(a.cm_customer_id,b.customer_id)  cm_customer_id,
  				COALESCE(a.domain,b.domain)  domain,
              	COALESCE(a.cm_creative_id,b.creative_id)  cm_creative_id,
  				a.hb_customer_id,
  				a.hb_creative_id,
              	COALESCE(a.provider_group_id_v1,b.provider_group_id) provider_group_id,
              	COALESCE(a.max_mkt,b.max_mkt) as max_mkt,
              	COALESCE(a.max_partner_type,b.max_partner_type) max_partner_type,
              	COALESCE(a.max_flag,b.max_flag) max_flag,
              	a.adclicks,
  				a.total_dimension_adclicks,
              	a.net_total_revenue,
              	b.system_cost,
              	b.advertiser_cost ,
      			b.conversion_payout ,
      			b.advertiser_value ,
      			b.audited_revenue,
  				b.advertiser_value_external_dist

	FROM
  				adding_dimensionwise_adclicks a
  	FULL OUTER JOIN
  				max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id_v1 = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			 			
)

--SELECT
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
	--		sum(advertiser_value_external_dist) advertiser_value_external_dist
	--	from joining_max_from_darshil_and_vogon
--GROUP BY 1      

--SELECT * FROM joining_max_from_darshil_and_vogon
--WHERE adclicks = 'null'

-- CHECKS

--select  
--		* FROM joining_max_from_darshil_and_analytics
--			WHERE customer_id = '8CUM3B8J1'

--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from joining_max_from_darshil_and_vogon



-------------------------------
--MAX METRICS DISTRIBUTION

,max_metrics_distribution
( 
SELECT 
	cm_customer_id,
	domain,
	cm_creative_id,
	hb_customer_id,
	hb_creative_id,
	provider_group_id,
	max_mkt,
	max_partner_type,
	max_flag,
  	adclicks,
  	net_total_revenue,
	((adclicks)/(total_dimension_adclicks)) * system_cost as system_cost,
	((adclicks)/(total_dimension_adclicks)) * advertiser_cost  as  advertiser_cost ,
	((adclicks)/(total_dimension_adclicks)) * conversion_payout as  conversion_payout ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value as  advertiser_value ,
	((adclicks)/(total_dimension_adclicks)) * audited_revenue as  audited_revenue ,
	((adclicks)/(total_dimension_adclicks)) * advertiser_value_external_dist as  advertiser_value_external_final
FROM	 	
  joining_max_from_darshil_and_vogon
)





--select  	
--			SUM(adclicks) adclicks,
--			SUM(net_total_revenue) net_total_revenue,
--			SUM(system_cost) as system_cost,
-- 	   		SUM(advertiser_cost) advertiser_cost,
--    		SUM(conversion_payout) conversion_payout,
--    		SUM(advertiser_value) advertiser_value,
--    		SUM(audited_revenue) audited_revenue,
--			sum(advertiser_value_external_dist) advertiser_value_external_dist
--		from max_metrics_distribution




,joining_with_max_filtered_for_nulls(
 	SELECT 
  	a.cm_customer_id,
	a.domain,
	a.cm_creative_id,
	a.hb_customer_id,
	a.hb_creative_id,
	a.provider_group_id,
	a.max_mkt,
	a.max_partner_type,
	a.max_flag,
	a.adclicks,
  	a.net_total_revenue,
	COALESCE(a.system_cost,b.system_cost) system_cost_final,
	COALESCE(a.advertiser_cost,b.advertiser_cost) advertiser_cost_final,
	COALESCE(a.conversion_payout,b.conversion_payout) conversion_payout_final,
	COALESCE(a.advertiser_value,b.advertiser_value) advertiser_value_final,
	COALESCE(a.audited_revenue,b.audited_revenue) audited_revenue_final,
	COALESCE(a.advertiser_value_external_final,b.advertiser_value_external_dist) advertiser_value_external
  FROM max_metrics_distribution a
  LEFT JOIN max_filtered b
  	ON
  				a.cm_customer_id = b.customer_id 				
  			AND a.domain  = 	b.domain 
  			AND a.provider_group_id = b.provider_group_id
  			AND a.cm_creative_id =  b.creative_id
  			AND a.max_mkt  =  b.max_mkt
   			AND a.max_partner_type  = b.max_partner_type
  			
)

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from joining_with_max_filtered_for_nulls
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        




,non_max_data_in_vogon
(
  	SELECT 
  			cm_customer_id,
  			domain_name as domain,
  			CAST (creative_id  as float) cm_creative_id,
  			hb_customer_id,
  			hb_creative_id,
  			provider_group_id,
  			max_mkt,
  			max_partner_type,
  			max_flag,	
  			SUM(adclicks) as adclicks,
  			SUM(net_total_revenue) as net_total_revenue,
  			0 as system_cost_final,	
	 		0 as advertiser_cost_final,
	 		0 as conversion_payout_final,
	 		0 as advertiser_value_final,
	 		0 as audited_revenue_final,
	 		0 as advertiser_value_external
	FROM
			ybnca_data_from_vogon_with_max_flag
	WHERE max_flag = 'NON_MAX'
  	GROUP BY 1,2,3,4,5,6,7,8,9
)	
  
--UNION BETWEEN MAX AND NON MAX DATA


, final_union (
SELECT * FROM non_max_data_in_vogon
UNION ALL
SELECT * FROM joining_with_max_filtered_for_nulls 
)  
  
  

--select *
--		from joining_with_max_filtered_for_nulls


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost_final) ,
-- 	   		SUM(advertiser_cost_final) ,
--    		SUM(conversion_payout_final), 
--    		SUM(advertiser_value_final) ,
--    		SUM(audited_revenue_final), 
--			sum(advertiser_value_external) 
--		from final_union
        
--select  	
--			*
--		from joining_with_max_filtered_for_nulls
--LIMIT 2        

-- adding customer,creative and provider names



,customerm(
SELECT a.*,b.`customer_fullname`
from  final_union as a
left join cm.customer_master as b
on a.cm_customer_id=b.customer_id
)



,creative_m(
SELECT a.*,b.`creative_name`
from  customerm as a
left join cm.creative_master as b
on a.cm_creative_id= cast(b.creative_id as float)
  AND a.cm_customer_id = b.customer_id
)

SELECT * FROM creative_m




Table stored : 
 Misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost_v1

Ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost

Ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost_v1


ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost_v2


 
8.  Distributing TAC from HB reports


Query : 

with handling_null_adclicks(
SELECT	
  	customer_id
	,domain
	,creative_id
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,customer_fullname
	,creative_name
	,provider_group_name
FROM
  	misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
)

-- GETTING HB CUSTOMER ID FROM MAPPER 
,adding_hb_customer
(
SELECT 
  'April 2023' as month,
  a.*,
  b.hb_customer_id
  FROM handling_null_adclicks a
LEFT JOIN misc.cm_to_hb_mapper_Jan22_to_Apr23 b 
ON b.cm_customer_id = a.customer_id
)
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
--SELECT * FROM adding_hb_customer
--LIMIT 5

-- taking sum of adclicks based on month and hb_customer_id in separate cte

,cust_wise_adclicks
(
SELECT 
  'April 2023' as month,
  hb_customer_id,
  SUM(adclicks) adclicks 
FROM 
  adding_hb_customer 
GROUP BY 1,2
)
--SELECT * FROM cust_wise_adclicks
--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  adding_hb_customer a
  LEFT JOIN cust_wise_adclicks b  
	on b.month = a.month
  AND b.hb_customer_id = a.hb_customer_id
)
--SELECT *
--        FROM adding_custwise_adclicks

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data



,adding_month_to_23_hb_reports_data
(
SELECT
  'April 2023' as month,
  *
  FROM misc.april_23_ybnca_tac_from_hb_customer_v1
)



--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.month
  	,a.customer_id as cm_customer_id
	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
	,a.domain
	,a.creative_id
	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external_dist
	,a.customer_fullname
	,a.creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN adding_month_to_23_hb_reports_data b 
	on b.month = a.month
  	AND b.hb_customer_id = a.hb_customer_id
)



--select * FROM joining_hb_tac_data_with_meta_data


--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN adding_month_to_23_hb_reports_data b 
  	ON b.hb_customer_id = a.hb_customer_id
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
		month
  		,cm_customer_id
		,hb_customer_id
  		,customer_fullname
		,domain
		,creative_id
  		,creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

--SELECT *
--FROM 
--final_query


SELECT 
		SUM(adclicks)
		,SUM(net_total_revenue)
		,SUM(system_cost)
		,SUM(advertiser_cost)
		,SUM(conversion_payout)
		,SUM(advertiser_value)
		,SUM(audited_revenue)
		,SUM(advertiser_value_external_dist)
		,SUM(hb_tac_final)
FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query
Query 2:
with handling_null_adclicks(
SELECT	
  	customer_id
	,domain
	,creative_id
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external_dist
	,customer_fullname
	,creative_name
	,provider_group_name
FROM
  	misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
)

-- GETTING HB CUSTOMER ID FROM MAPPER 
,adding_hb_customer
(
SELECT 
  'April 2023' as month,
  a.*,
  b.hb_customer_id
  FROM handling_null_adclicks a
LEFT JOIN misc.cm_to_hb_mapper_Jan22_to_Apr23 b 
ON b.cm_customer_id = a.customer_id
)
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM misc.vogon_ybnca_2023_april_after_join_with_ext_adv_cost
--SELECT * FROM adding_hb_customer
--LIMIT 5

-- taking sum of adclicks based on month and hb_customer_id in separate cte

,cust_wise_adclicks
(
SELECT 
  'April 2023' as month,
  hb_customer_id,
  SUM(adclicks) adclicks 
FROM 
  adding_hb_customer 
GROUP BY 1,2
)
--SELECT * FROM cust_wise_adclicks
--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  adding_hb_customer a
  LEFT JOIN cust_wise_adclicks b  
	on b.month = a.month
  AND b.hb_customer_id = a.hb_customer_id
)
--SELECT *
--        FROM adding_custwise_adclicks

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data



,adding_month_to_23_hb_reports_data
(
SELECT
  'April 2023' as month,
  *
  FROM misc.april_23_ybnca_tac_from_hb_customer_v1
)



--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	 COALESCE(a.month,b.month) as month
  	,a.customer_id as cm_customer_id
	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
	,a.domain
	,a.creative_id
	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external_dist
	,a.customer_fullname
	,a.creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN adding_month_to_23_hb_reports_data b 
	on b.month = a.month
  	AND b.hb_customer_id = a.hb_customer_id
)



--select * FROM joining_hb_tac_data_with_meta_data


--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN adding_month_to_23_hb_reports_data b 
  	ON b.hb_customer_id = a.hb_customer_id
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
		month
  		,cm_customer_id
		,hb_customer_id
  		,customer_fullname
		,domain
		,creative_id
  		,creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query


--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external_dist)
--		,SUM(hb_tac_final)
--FROM final_query
--WHERE month IS NULL
--

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query




QUERY version3 : 
---------------------------------------------------------------

--handling null adclicks from vogon_meta_data


with handling_null_adclicks(
SELECT	
  	cm_customer_id
	,domain
	,cm_creative_id
	,hb_customer_id
	,hb_creative_id
  	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost_final as  system_cost
	,advertiser_cost_final as advertiser_cost
	,conversion_payout_final as conversion_payout
	,advertiser_value_final as advertiser_value
	,audited_revenue_final as audited_revenue
	,advertiser_value_external
	,customer_fullname as cm_customer_fullname
	,creative_name as cm_creative_name
	,provider_group_name 
FROM
  	misc.vogon_ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost
)

--SELECT * FROM handling_null_adclicks
--LIMIT 2


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost) ,
-- 	   		SUM(advertiser_cost) ,
--    		SUM(conversion_payout), 
--    		SUM(advertiser_value) ,
--    		SUM(audited_revenue), 
--			sum(advertiser_value_external) 
--		from handling_null_adclicks






--SELECT * FROM misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
--LIMIT 2


----------------------------------------------------------------------------------------------------------



,dimension_wise_adclicks
(
SELECT 
  hb_customer_id,
  hb_creative_id,
  domain,
  SUM(adclicks) adclicks 
FROM 
  handling_null_adclicks 
GROUP BY 1,2,3
)

--SELECT sum(adclicks) FROM dimension_wise_adclicks



--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  handling_null_adclicks a
  LEFT JOIN dimension_wise_adclicks b  
  ON b.hb_customer_id = a.hb_customer_id
  AND b.hb_creative_id = a.hb_creative_id
  AND b.domain = a.domain
  
)
--SELECT *
--        FROM adding_custwise_adclicks
--        LIMIT 10

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data




--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.cm_customer_id
  	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
  	,b.hb_customer_name
	,COALESCE(a.domain,b.domain) as domain
	,a.cm_creative_id
	,COALESCE(a.hb_creative_id,b.hb_creative_id) as hb_creative_id
  	,b.hb_creative_name
  	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external
	,a.cm_customer_fullname
	,a.cm_creative_name
	,a.provider_group_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN misc.vogon_apr_23_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain  	
)



--select * FROM joining_hb_tac_data_with_meta_data
--LIMIT 2

--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN misc.vogon_apr_23_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
  		cm_customer_id
  		,cm_customer_fullname
		,hb_customer_id
  		,hb_customer_name
		,domain
		,cm_creative_id
  		,cm_creative_name
  		,hb_creative_id
  		,hb_creative_name
		,provider_group_id
  		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query


--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query

—-----------------------------------------------------------------------------------------------------------

Query 4:
--handling null adclicks from vogon_meta_data


with handling_null_adclicks(
SELECT	
  	cm_customer_id
	,domain
	,cm_creative_id
	,hb_customer_id
	,hb_creative_id
  	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost_final as  system_cost
	,advertiser_cost_final as advertiser_cost
	,conversion_payout_final as conversion_payout
	,advertiser_value_final as advertiser_value
	,audited_revenue_final as audited_revenue
	,advertiser_value_external
	,customer_fullname as cm_customer_fullname
	,creative_name as cm_creative_name
	
FROM
  	misc.vogon_ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost_v1
)

--SELECT * FROM handling_null_adclicks
--LIMIT 2


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost) ,
-- 	   		SUM(advertiser_cost) ,
--    		SUM(conversion_payout), 
--    		SUM(advertiser_value) ,
--    		SUM(audited_revenue), 
--			sum(advertiser_value_external) 
--		from handling_null_adclicks






--SELECT * FROM misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
--LIMIT 2


----------------------------------------------------------------------------------------------------------



,dimension_wise_adclicks
(
SELECT 
  hb_customer_id,
  hb_creative_id,
  domain,
  SUM(adclicks) adclicks 
FROM 
  handling_null_adclicks 
GROUP BY 1,2,3
)

--SELECT sum(adclicks) FROM dimension_wise_adclicks



--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  handling_null_adclicks a
  LEFT JOIN dimension_wise_adclicks b  
  ON b.hb_customer_id = a.hb_customer_id
  AND b.hb_creative_id = a.hb_creative_id
  AND b.domain = a.domain
  
)
--SELECT *
--        FROM adding_custwise_adclicks
--        LIMIT 10

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data




--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.cm_customer_id
  	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
  	,b.hb_customer_name
	,COALESCE(a.domain,b.domain) as domain
	,a.cm_creative_id
	,COALESCE(a.hb_creative_id,b.hb_creative_id) as hb_creative_id
  	,b.hb_creative_name
  	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external
	,a.cm_customer_fullname
	,a.cm_creative_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN misc.vogon_apr_23_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain  	
)



--select * FROM joining_hb_tac_data_with_meta_data
--LIMIT 2

--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN misc.vogon_apr_22_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
  		cm_customer_id
  		,cm_customer_fullname
		,hb_customer_id
  		,hb_customer_name
		,domain
		,cm_creative_id
  		,cm_creative_name
  		,hb_creative_id
  		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query

--
--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query

Query v5:
--handling null adclicks from vogon_meta_data


with handling_null_adclicks(
SELECT	
  	cm_customer_id
	,domain
	,cm_creative_id
	,hb_customer_id
	,hb_creative_id
  	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,CASE WHEN adclicks = 'null' THEN 0 else  adclicks END as adclicks
	,net_total_revenue
	,system_cost_final as  system_cost
	,advertiser_cost_final as advertiser_cost
	,conversion_payout_final as conversion_payout
	,advertiser_value_final as advertiser_value
	,audited_revenue_final as audited_revenue
	,advertiser_value_external
	,customer_fullname as cm_customer_fullname
	,creative_name as cm_creative_name
	
FROM
  	misc.vogon_ybnca_demand_april_23_with_dist_max_cost_stats_external_adv_cost_v2
)

--SELECT * FROM handling_null_adclicks
--LIMIT 2


--select  	
--			SUM(adclicks),
--			SUM(net_total_revenue) ,
--			SUM(system_cost) ,
-- 	   		SUM(advertiser_cost) ,
--    		SUM(conversion_payout), 
--    		SUM(advertiser_value) ,
--    		SUM(audited_revenue), 
--			sum(advertiser_value_external) 
--		from handling_null_adclicks






--SELECT * FROM misc.vogon_ybnca_demand_april_22_with_dist_max_cost_stats_external_adv_cost
--LIMIT 2


----------------------------------------------------------------------------------------------------------



,dimension_wise_adclicks
(
SELECT 
  hb_customer_id,
  hb_creative_id,
  domain,
  SUM(adclicks) adclicks 
FROM 
  handling_null_adclicks 
GROUP BY 1,2,3
)

--SELECT sum(adclicks) FROM dimension_wise_adclicks



--limit 5

-- looking up the monthly hb customer adclicks


,adding_custwise_adclicks
(
SELECT
  a.*,
  b.adclicks as customer_total_adclicks
  FROM 
  handling_null_adclicks a
  LEFT JOIN dimension_wise_adclicks b  
  ON b.hb_customer_id = a.hb_customer_id
  AND b.hb_creative_id = a.hb_creative_id
  AND b.domain = a.domain
  
)
--SELECT *
--        FROM adding_custwise_adclicks
--        LIMIT 10

--------------------------------------------------------------------------------------------------------------------

-- Adding month column to HB reports data




--SELECT sum(hb_tac)
--FROM adding_month_to_23_hb_reports_data


--JOINING TAC DATA with NEW META DATA TO GET TAC

,joining_hb_tac_data_with_meta_data

(
SELECT
  	a.cm_customer_id
  	,COALESCE(a.hb_customer_id,b.hb_customer_id) as hb_customer_id
  	,b.hb_customer_name
	,COALESCE(a.domain,b.domain) as domain
	,a.cm_creative_id
	,COALESCE(a.hb_creative_id,b.hb_creative_id) as hb_creative_id
  	,b.hb_creative_name
  	,a.provider_group_id
	,a.max_mkt
	,a.max_partner_type
	,a.max_flag
	,a.adclicks
	,a.net_total_revenue
	,a.system_cost
	,a.advertiser_cost
	,a.conversion_payout
	,a.advertiser_value
	,a.audited_revenue
	,a.advertiser_value_external
	,a.cm_customer_fullname
	,a.cm_creative_name
	,a.customer_total_adclicks
    ,b.hb_tac
    FROM 
    adding_custwise_adclicks a
    FULL OUTER JOIN misc.vogon_apr_23_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain  	
)



--select * FROM joining_hb_tac_data_with_meta_data
--LIMIT 2

--SELECT sum(hb_tac)
--FROM joining_hb_tac_data_with_meta_data


--SELECT * FROM joining_hb_tac_data_23
--LIMIT 10
--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) 
--       FROM joining_hb_tac_data_with_meta_data


----------------------------------------------------------------------------------------------------------------------------

--TAC DISTRIBUTION

,tac_distribution
( 
SELECT 
  *,
  ((adclicks)/(customer_total_adclicks)) * (hb_tac) as hb_tac_dist
FROM	 	
  joining_hb_tac_data_with_meta_data
)

--SELECT SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue) ,
--        SUM(hb_tac_dist)
--       FROM tac_distribution

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac) FROM tac_distribution 
--GROUP BY 1


-------------------



,joining_with_hb_for_nulls(
 	SELECT a.*,
  	COALESCE(a.hb_tac_dist,b.hb_tac) as hb_tac_final
  FROM 
    tac_distribution a
    LEFT JOIN misc.vogon_apr_23_hb_tac_without_inflated_customers b 
  	ON b.hb_customer_id = a.hb_customer_id
  	AND b.hb_creative_id = a.hb_creative_id
  	AND b.domain = a.domain
)

--SELECT *
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL
--AND hb_customer_id IS NOT NULL

--SELECT hb_customer_id,SUM(hb_tac_dist),SUM(hb_tac),sum(hb_tac_final)
--FROM joining_with_hb_for_nulls
--GROUP BY 1





--SELECT SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE hb_tac_dist IS  NULL



--SELECT cm_customer_id,hb_customer_id,
--	SUM(hb_tac),
--    SUM(hb_tac_dist),
--    SUM(hb_tac_final),
--    SUM(net_total_revenue),
-- 		SUM(system_cost) ,
-- 		SUM(advertiser_cost) ,
-- 		SUM(conversion_payout) ,
-- 		SUM(advertiser_value) ,
-- 		SUM(audited_revenue)
--FROM joining_with_hb_for_nulls
--WHERE cm_customer_id IS NULL
--GROUP BY 1,2




,final_query(
SELECT
  		cm_customer_id
  		,cm_customer_fullname
		,hb_customer_id
  		,hb_customer_name
		,domain
		,cm_creative_id
  		,cm_creative_name
  		,hb_creative_id
  		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue
		,advertiser_value_external
		,hb_tac_final
FROM
		joining_with_hb_for_nulls
)

SELECT *
FROM 
final_query

--
--SELECT 
--		SUM(adclicks)
--		,SUM(net_total_revenue)
--		,SUM(system_cost)
--		,SUM(advertiser_cost)
--		,SUM(conversion_payout)
--		,SUM(advertiser_value)
--		,SUM(audited_revenue)
--		,SUM(advertiser_value_external)
--		,SUM(hb_tac_final)
--FROM final_query

--SELECT hb_customer_id FROM final_query
--WHERE hb_tac_final IS NOT NULL


--SELECT * FROM final_query



Table stored : 
final_data_april_23_with_hb_tac_external_adv_cost


Final_data_april_23_with_hb_tac_external_adv_cost_v2 - correct tac dist

-resolved month issue in hb - 


AFTER THE query version 3 : 
 misc.vogon_april_23_ybnca_demand_with_hb_tac_external_adv_cost

April_23_ybnca_demand_with_hb_tac_external_adv_cost_v1
April_23_ybnca_demand_with_hb_tac_external_adv_cost_v2
april_23_ybnca_demand_with_hb_tac_external_adv_cost_v3











9.  Final flags and columns

Query : 



—---------------------------------------------------------------------------------------------------------------------------





with union_files(

SELECT * FROM misc.vogon_final_data_april_22_with_hb_tac_external_adv_cost_v1
UNION ALL
SELECT * FROM misc.vogon_final_data_april_23_with_hb_tac_external_adv_cost_v1
  
)


, changes(
SELECT
		month
		,cm_customer_id
		,hb_customer_id
		,customer_fullname
		,domain
		,creative_id
		,creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external_dist ELSE net_total_revenue END as effective_revenue  FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)
        
        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,hb_customer_id
		,customer_fullname
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,creative_id
		,creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,flag_misc(
SELECT domain , month , SUM(net_total_revenue) net_total_revenue
FROM replacing_null_domains
GROUP BY 1,2
HAVING sum(net_total_revenue)<100
)
--SELECT domain FROM flag_misc


,grouping_misc(
SELECT *,'above_100' as domain_flag
FROM replacing_null_domains
WHERE domain NOT IN (SELECT  domain from flag_misc)
)

SELECT domain , month , SUM(net_total_revenue) net_total_revenue
FROM grouping_misc
GROUP BY 1,2
HAVING sum(net_total_revenue)<100








--SELECT * FROM grouping_misc
--WHERE domain IN (
--	'milesplit.com'
--,'foreclosurephilippines.com'
--,'informationhood.com'
--,'dermishealth.com'
--,'investmentpedia.org'
--,'jacksonnewspapers.com'
--,'clickthecity.com'
--,'hillarytent.org'
--,'icedepartment.com'
--,'80thbirthdayideas.com'
--,'zshadow.info'
--,'exyuaviation.com'
--,'photorumors.com'
--,'areanapoli.it'
--,'cashroadster.com'
--,'vollkommen-tierisch.de'
--,'gazetakrakowska.pl'
--,'womanlylive.com'
--,'yukon-solitaire.com'
--,'thedogsjournal.com'
--,'patheos.com'
--,'cellphonesguide.net'
--)

—----------------------------------------------------------------------------------------------------------------------------


Query v2:




--—---------------------------------------------------------------------------------------------------------------------------





with union_files(

SELECT * FROM misc.vogon_final_data_april_22_with_hb_tac_external_adv_cost_v3
UNION ALL
SELECT * FROM misc.vogon_final_data_april_23_with_hb_tac_external_adv_cost_v3
  
)


, changes(
SELECT
		month
		,cm_customer_id
		,hb_customer_id
		,customer_fullname
		,domain
		,creative_id
		,creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external_dist ELSE net_total_revenue END as effective_revenue  FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)
        
        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,hb_customer_id
		,customer_fullname
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,creative_id
		,creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external_dist
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,replacing_null_metrics(
SELECT
  		month
		,cm_customer_id
		,hb_customer_id
		,customer_fullname
		,domain
		,creative_id
		,creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,REPLACE(adclicks ,'null',0) as adclicks
		,REPLACE(net_total_revenue ,'null',0) as net_total_revenue
		,REPLACE(system_cost ,'null',0) as system_cost
		,REPLACE(advertiser_cost ,'null',0) as advertiser_cost
		,REPLACE(conversion_payout ,'null',0) as conversion_payout
		,REPLACE(advertiser_value ,'null',0) as advertiser_value
		,REPLACE(max_audited_revenue ,'null',0) as max_audited_revenue
		,REPLACE(advertiser_value_external_dist ,'null',0) as advertiser_value_external_dist
		,REPLACE(hb_tac_final ,'null',0) as hb_tac_final
  		,REPLACE(effective_revenue ,'null',0) as effective_revenue
		,REPLACE(effective_or ,'null',0) as effective_or
  FROM
  		replacing_null_domains
)

SELECT * FROM replacing_null_metric

Query v3:


with adding_month_to_22(
SELECT
	'April 2022' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,provider_group_name
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost
) 

,adding_month_to_23(
SELECT
	'April 2023' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,provider_group_name
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost
) 

,union_files(

SELECT * FROM adding_month_to_22
UNION ALL
SELECT * FROM adding_month_to_23
  
)

--SELECT * FROM union_files



, changes(
SELECT
		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external ELSE net_total_revenue END as 		effective_revenue   
FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)
        
        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,replacing_null_metrics(
SELECT
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,provider_group_name
		,max_mkt
		,max_partner_type
		,max_flag
		,REPLACE(adclicks ,'null',0) as adclicks
		,REPLACE(net_total_revenue ,'null',0) as net_total_revenue
		,REPLACE(system_cost ,'null',0) as system_cost
		,REPLACE(advertiser_cost ,'null',0) as advertiser_cost
		,REPLACE(conversion_payout ,'null',0) as conversion_payout
		,REPLACE(advertiser_value ,'null',0) as advertiser_value
		,REPLACE(max_audited_revenue ,'null',0) as max_audited_revenue
		,REPLACE(advertiser_value_external ,'null',0) as advertiser_value_external
		,REPLACE(hb_tac_final ,'null',0) as hb_tac_final
  		,REPLACE(effective_revenue ,'null',0) as effective_revenue
		,REPLACE(effective_or ,'null',0) as effective_or
  FROM
  		replacing_null_domains
)

SELECT * FROM replacing_null_metrics


Query v4:
with adding_month_to_22(
SELECT
	'April 2022' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost_v1
) 

,adding_month_to_23(
SELECT
	'April 2023' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost_v2
) 

,union_files(

SELECT * FROM adding_month_to_22
UNION ALL
SELECT * FROM adding_month_to_23
  
)

--SELECT * FROM union_files



, changes(
SELECT
		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external ELSE net_total_revenue END as 		effective_revenue   
FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)
        
        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,replacing_null_metrics(
SELECT
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,REPLACE(adclicks ,'null',0) as adclicks
		,REPLACE(net_total_revenue ,'null',0) as net_total_revenue
		,REPLACE(system_cost ,'null',0) as system_cost
		,REPLACE(advertiser_cost ,'null',0) as advertiser_cost
		,REPLACE(conversion_payout ,'null',0) as conversion_payout
		,REPLACE(advertiser_value ,'null',0) as advertiser_value
		,REPLACE(max_audited_revenue ,'null',0) as max_audited_revenue
		,REPLACE(advertiser_value_external ,'null',0) as advertiser_value_external
		,REPLACE(hb_tac_final ,'null',0) as hb_tac_final
  		,REPLACE(effective_revenue ,'null',0) as effective_revenue
		,REPLACE(effective_or ,'null',0) as effective_or
  FROM
  		replacing_null_domains
)

,adding_provider_group_name(

 SELECT
  a.*,
  b.`Provider Group Name` as provider_group_name
  FROM
	replacing_null_metrics a
  left join misc.provider_group_mapping b
  ON b.`Provider Group Id` = a.provider_group_id
)

SELECT * FROM adding_provider_group_name



Query v 5:

with adding_month_to_22(
SELECT
	'April 2022' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost_v1
) 

,adding_month_to_23(
SELECT
	'April 2023' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_23_ybnca_demand_with_hb_tac_external_adv_cost_v2
) 

,union_files(

SELECT * FROM adding_month_to_22
UNION ALL
SELECT * FROM adding_month_to_23
  
)

--SELECT * FROM union_files



, changes(
SELECT
		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external ELSE net_total_revenue END as 		effective_revenue   
FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)

SELECT * FROM or_column
WHERE cm_customer_id = '8CUM3B8J1'

        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,replacing_null_metrics(
SELECT
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,REPLACE(adclicks ,'null',0) as adclicks
		,REPLACE(net_total_revenue ,'null',0) as net_total_revenue
		,REPLACE(system_cost ,'null',0) as system_cost
		,REPLACE(advertiser_cost ,'null',0) as advertiser_cost
		,REPLACE(conversion_payout ,'null',0) as conversion_payout
		,REPLACE(advertiser_value ,'null',0) as advertiser_value
		,REPLACE(max_audited_revenue ,'null',0) as max_audited_revenue
		,REPLACE(advertiser_value_external ,'null',0) as advertiser_value_external
		,REPLACE(hb_tac_final ,'null',0) as hb_tac_final
  		,REPLACE(effective_revenue ,'null',0) as effective_revenue
		,REPLACE(effective_or ,'null',0) as effective_or
                     
  FROM
  		replacing_null_domains
)

,adding_provider_group_name(

 SELECT
  a.*,
  b.`Provider Group Name` as provider_group_name
  FROM
	replacing_null_metrics a
  left join misc.provider_group_mapping b
  ON b.`Provider Group Id` = a.provider_group_id
)

SELECT * FROM adding_provider_group_name


Query v6:

with adding_month_to_22(
SELECT
	'April 2022' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_22_ybnca_demand_with_hb_tac_external_adv_cost_v1
) 

,adding_month_to_23(
SELECT
	'April 2023' as month
  	,cm_customer_id
	,cm_customer_fullname
	,hb_customer_id
	,hb_customer_name
	,domain
	,cm_creative_id
	,cm_creative_name
	,hb_creative_id
	,hb_creative_name
	,provider_group_id
	,max_mkt
	,max_partner_type
	,max_flag
	,adclicks
	,net_total_revenue
	,system_cost
	,advertiser_cost
	,conversion_payout
	,advertiser_value
	,audited_revenue
	,advertiser_value_external
	,hb_tac_final
FROM
  	misc.vogon_april_23_ybnca_demand_with_hb_tac_external_adv_cost_v2
) 

,union_files(

SELECT * FROM adding_month_to_22
UNION ALL
SELECT * FROM adding_month_to_23
  
)

--SELECT * FROM union_files



, changes(
SELECT
		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,audited_revenue as max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,CASE WHEN month = 'April 2022' AND max_mkt = 'dmsedo' THEN advertiser_value_external ELSE net_total_revenue END as 		effective_revenue   
FROM 
		union_files  			
)


,or_column(
SELECT 
		*,
		effective_revenue - hb_tac_final as effective_or
  FROM
  		changes
		)

--SELECT * FROM or_column
--WHERE cm_customer_id = '8CUM3B8J1'

        
        
,replacing_null_domains(
SELECT 
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,CASE WHEN domain = 'null' THEN 'Manualadjustment.com' ELSE domain END as domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,adclicks
		,net_total_revenue
		,system_cost
		,advertiser_cost
		,conversion_payout
		,advertiser_value
		,max_audited_revenue
		,advertiser_value_external
		,hb_tac_final
  		,effective_revenue
		,effective_or
FROM
  		or_column
)

,replacing_null_metrics(
SELECT
  		month
		,cm_customer_id
		,cm_customer_fullname
		,hb_customer_id
		,hb_customer_name
		,domain
		,cm_creative_id
		,cm_creative_name
		,hb_creative_id
		,hb_creative_name
		,provider_group_id
		,max_mkt
		,max_partner_type
		,max_flag
		,REPLACE(adclicks ,'null',0) as adclicks
		,REPLACE(net_total_revenue ,'null',0) as net_total_revenue
		,REPLACE(system_cost ,'null',0) as system_cost
		,REPLACE(advertiser_cost ,'null',0) as advertiser_cost
		,REPLACE(conversion_payout ,'null',0) as conversion_payout
		,REPLACE(advertiser_value ,'null',0) as advertiser_value
		,REPLACE(max_audited_revenue ,'null',0) as max_audited_revenue
		,REPLACE(advertiser_value_external ,'null',0) as advertiser_value_external
		,REPLACE(hb_tac_final ,'null',0) as hb_tac_final
  		,REPLACE(effective_revenue ,'null',0) as effective_revenue
		,REPLACE(effective_or ,'null',0) as effective_or
  FROM
  		replacing_null_domains
)

,adding_provider_group_name(

 SELECT
  a.*,
  b.`Provider Group Name` as provider_group_name
  FROM
	replacing_null_metrics a
  left join misc.provider_group_mapping b
  ON b.`Provider Group Id` = a.provider_group_id
)

SELECT * FROM adding_provider_group_name





Table stored : 
Full data : final_ybnca_demand_data_April_22_and23

Full data with v2 : final_ybnca_demand_data_april_22_and_23_v3


Query 3 output : ybnca_demand_final_data_April_22_and_23

Query 4 output: misc.vogon_ybnca_demand_final_data_April_22_and_23_v1
QUERY 5 output : misc.vogon_ybnca_demand_final_data_April_22_and_23_v2
QUERY 6 : ybnca_demand_final_data_April_22_and_23_v5

—---------------------------------------------------------------------------------------------------------------




10.  Adding itype

Query :
--SELECT 
--	month
--	,SUM(adclicks) adclicks
--	,SUM(net_total_revenue) net_total_revenue
--	,SUM(system_cost) system_cost
--	,SUM(advertiser_cost) advertiser_cost
--	,SUM(conversion_payout) conversion_payout
--	,SUM(advertiser_value) advertiser_value
--	,SUM(max_audited_revenue) max_audited_revenue
--	,SUM(advertiser_value_external) advertiser_value_external
--	,SUM(hb_tac_final) hb_tac_final
--FROM
--misc.vogon_ybnca_demand_final_data_April_22_and_23_v5
--GROUP BY 1

--DESCRIBE misc.vogon_ybnca_demand_final_data_April_22_and_23_v5


------------------------------------------------------

--separating the final final into months

with final_22 as (
SELECT * FROM misc.vogon_ybnca_demand_final_data_April_22_and_23_v5
WHERE month = 'April 2022'
)


,final_23(
SELECT * FROM misc.vogon_ybnca_demand_final_data_April_22_and_23_v5
WHERE month = 'April 2023'
)


------------------------------------------------------

--adding integration_type

,final_22_with_itype (
SELECT a.*,
  b.integration_type_name,
b.integration_type_id
FROM
    final_22 a
LEFT JOIN misc.vogon_apr_22_cust_itype_mapping b
  ON
 	a.hb_customer_name = b.hb_customer_name
 	AND a.hb_customer_id = b.hb_customer_id
)

-- hb reports link : http://mnet-url.media.net/853EEDF1-98D9-4210-BA81-3129B897840A

--SELECT integration_type_name ,integration_type_id
--,SUM(hb_tac_final) hb_tac_final
--FROM final_22_with_itype
--GROUP BY 1,2
--ORDER BY hb_tac_final DESC

,final_23_with_itype (
SELECT a.*,
  b.integration_type_name,
b.integration_type_id
FROM
    final_23 a
LEFT JOIN misc.vogon_apr_23_cust_itype_mapping b
  ON
 	a.hb_customer_name = b.hb_customer_name
 	AND a.hb_customer_id = b.hb_customer_id
)


-- hb reports link : http://mnet-url.media.net/A3BC5EE0-B5E9-445A-8962-660CE6B2F61D

--SELECT integration_type_name ,integration_type_id
--,SUM(hb_tac_final) hb_tac_final
--FROM final_23_with_itype
--GROUP BY 1,2
--ORDER BY hb_tac_final DESC

-----------------------------------------------------------------------------------

--FINAL UNION

SELECT * FROM final_22_with_itype
UNION ALL
SELECT * FROM final_23_with_itype









Table stored :
ybnca_demand_final_data_April_22_and_23_with_integration_type



11.  domain_flag
query :
%hybrid
with flag
(SELECT month,domain, SUM(net_total_revenue) as  net_total_revenue , SUM(hb_tac_final) as hb_tac_final , 'Exclude' as domain_flag
FROM misc.vogon_ybnca_demand_final_data_April_22_and_23_with_integration_type
GROUP BY 1,2
HAVING SUM(net_total_revenue) < 100 AND SUM(hb_tac_final) < 100
)
--	breonnaqueen.com
--SELECT * FROM flag
--LIMIT 10

,adding_flag
(SELECT a.*,
 		b.domain_flag
 FROM misc.vogon_ybnca_demand_final_data_April_22_and_23_with_integration_type a
 left outer join flag b
 on a.month = b.month
 AND a.domain = b.domain
)
--SELECT COUNT(*) from adding_flag
--WHERE domain_flag = 'Exclude'

--SELECT * FROM adding_flag
--ORDER BY net_total_revenue DESC
--LIMIT 100


,domain_final_cte(
SELECT
	*,
	COALESCE(domain_flag,domain) as domain_final
FROM 
  	adding_flag
)

SELECT * FROM domain_final_cte



--SELECT month,hb_customer_id,domain,SUM(net_total_revenue) as net_total_revenue , SUM(hb_tac_final) as hb_tac_final  from domain_final_cte
--WHERE domain_final <> 'Exclude'
--GROUP BY 1,2,3
--ORDER BY net_total_revenue DESC;
END;



Table stored :
ybnca_demand_final_data_April_22_and_23_with_integration_type_domain_flag
